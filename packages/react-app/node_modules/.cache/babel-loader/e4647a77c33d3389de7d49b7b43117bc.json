{"ast":null,"code":"import _toConsumableArray from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContractReader,useContractLoader,useUserAddress}from\"eth-hooks\";import{ethers}from\"ethers\";import{Input,Button,Spin,List}from\"antd\";import React,{useState,useRef}from\"react\";import{Link}from\"react-router-dom\";import{AddressInput,EtherInput,Address,Balance}from\"../components\";import{parseEther,formatEther}from\"@ethersproject/units\";/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(_ref){var yourLocalBalance=_ref.yourLocalBalance,readContracts=_ref.readContracts,mainnetProvider=_ref.mainnetProvider,price=_ref.price,DepositEvents=_ref.DepositEvents,ExecuteTransactionEvents=_ref.ExecuteTransactionEvents,OwnerEvents=_ref.OwnerEvents,blockExplorer=_ref.blockExplorer,localProvider=_ref.localProvider,contractConfig=_ref.contractConfig,chainId=_ref.chainId,userProviderAndSigner=_ref.userProviderAndSigner;//State variables\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),customNonce=_useState2[0],setCustomNonce=_useState2[1];//Hash calculator\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),toAddress=_useState4[0],setToAddress=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),value=_useState6[0],setValue=_useState6[1];var _useState7=useState(\"0x\"),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var _useState9=useState(\"0x\"),_useState10=_slicedToArray(_useState9,2),txHash=_useState10[0],setTxHash=_useState10[1];//Calldata calculator\nvar _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),callDataFunctionString=_useState12[0],setCallDataFunctionString=_useState12[1];var _useState13=useState(\"0x\"),_useState14=_slicedToArray(_useState13,2),encodedCalldataOutput=_useState14[0],setEncodedCalldataOutput=_useState14[1];//Hash signer\nvar _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),txHashSignerInput=_useState16[0],setTxHashSignerInput=_useState16[1];var _useState17=useState(\"0x\"),_useState18=_slicedToArray(_useState17,2),outputSignature=_useState18[0],setOutputSignature=_useState18[1];// you can also use hooks locally in your component of choice\n// in this case, let's keep track of 'nonce' variable from our contract\nvar nonce=useContractReader(readContracts,\"MetaMultiSigWallet\",\"nonce\");var signaturesRequired=useContractReader(readContracts,\"MetaMultiSigWallet\",\"signaturesRequired\");var contracts=useContractLoader(localProvider,contractConfig,chainId);var multiSigAddress=contracts.MetaMultiSigWallet?contracts.MetaMultiSigWallet.address:\"\";var userAddress=useUserAddress(userProviderAndSigner);//TX Executer\nvar _useState19=useState(),_useState20=_slicedToArray(_useState19,2),executerToAddress=_useState20[0],setExecuterToAddress=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),executerValue=_useState22[0],setExecuterValue=_useState22[1];var _useState23=useState(\"0x\"),_useState24=_slicedToArray(_useState23,2),executerData=_useState24[0],setExecuterData=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),executerSignaturesArray=_useState26[0],setExecuterSignaturesArray=_useState26[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chest info\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32},children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:9},children:\" Contract Address: \\xA0\"}),/*#__PURE__*/_jsx(Address,{address:multiSigAddress,ensProvider:localProvider,blockExplorer:blockExplorer,fontSize:25})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32,dislpay:\"flex\",justifyContent:\"center\"},children:[/*#__PURE__*/_jsxs(\"h2\",{style:{marginTop:32},children:[\"Signatures Required: \",signaturesRequired?signaturesRequired.toNumber():/*#__PURE__*/_jsx(Spin,{})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32},children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:9},children:\" Balance:\"}),contracts.MetaMultiSigWallet?/*#__PURE__*/_jsx(Balance,{address:multiSigAddress,provider:localProvider,price:price}):/*#__PURE__*/_jsx(Spin,{style:{marginTop:9}})]}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:32},children:\" Owners List\"}),/*#__PURE__*/_jsx(List,{style:{maxWidth:600,margin:\"auto\",marginTop:32},bordered:true,dataSource:OwnerEvents,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(Address,{address:item.args.owner,ensProvider:mainnetProvider,blockExplorer:blockExplorer,fontSize:32}),/*#__PURE__*/_jsx(\"div\",{style:{padding:16},children:item.args.added?\"üëç\":\"üëé\"})]},\"owner_\"+item.args.owner);}}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:32},children:\" Funding events\"}),/*#__PURE__*/_jsx(List,{style:{maxWidth:600,margin:\"auto\",marginTop:32},bordered:true,dataSource:DepositEvents,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"From:\"}),/*#__PURE__*/_jsx(Address,{address:item.args.sender,ensProvider:localProvider,blockExplorer:blockExplorer,fontSize:32}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:16},children:[\"amount: \",/*#__PURE__*/_jsx(Balance,{balance:item.args.amount,price:price})]})]},\"sender_\"+item.args.sender);}}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:32},children:\" Successful executed transactions log \"}),/*#__PURE__*/_jsx(List,{style:{maxWidth:600,margin:\"auto\",marginTop:32,marginBottom:32},bordered:true,dataSource:ExecuteTransactionEvents,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"To:\"}),/*#__PURE__*/_jsx(Address,{address:item.args.to,ensProvider:mainnetProvider,blockExplorer:blockExplorer,fontSize:32}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:16},children:[\"amount: \",/*#__PURE__*/_jsx(Balance,{balance:item.args.value,price:price})]})]},\"sender_\"+item.args.sender);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TX Hash calculator\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32},children:[/*#__PURE__*/_jsx(\"h2\",{style:{display:\"inline-block\"},children:\"Actual nonce: \\xA0\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"3rem\",display:\"inline-block\"},children:/*#__PURE__*/_jsx(Input,{prefix:\"#\",disabled:true,value:customNonce,placeholder:\"\"+(nonce?nonce.toNumber():\"loading...\"),onChange:setCustomNonce})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Destination address: \\xA0\"}),/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Value: \\xA0\"}),/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Calldata: \\xA0\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AddressInput,{autoFocus:true,ensProvider:mainnetProvider,placeholder:\"Enter address\",value:toAddress,onChange:setToAddress}),/*#__PURE__*/_jsx(EtherInput,{price:price,value:value,onChange:function onChange(_value){setValue(_value);}}),/*#__PURE__*/_jsx(Input,{placeholder:\"calldata 0x...\",value:data,onChange:function onChange(e){setData(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{style:{marginTop:32},onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return readContracts.MetaMultiSigWallet.getTransactionHash(nonce,toAddress,parseEther(\"\"+parseFloat(value).toFixed(12)),data);case 2:newHash=_context.sent;setTxHash(newHash);case 4:case\"end\":return _context.stop();}}},_callee);})),children:\"Calculate Hash\"}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:32},children:txHash})]}),/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Calldata calculator\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:\"auto\"},children:\"Function signature: \\xA0 \\xA0\"}),/*#__PURE__*/_jsx(Input,{style:{height:30,width:800},placeholder:\"i.e addSigner(address 0x50Fc27c707c0f83447939532A8d9218417a21321, uint256 2)\",value:callDataFunctionString,onChange:function onChange(e){setCallDataFunctionString(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{style:{marginTop:32},onClick:function onClick(){//create interface object from input\ncallDataFunctionString.trim();var temp=\"function \".concat(callDataFunctionString);var ABI=[temp];var iface=new ethers.utils.Interface(ABI);//extract funcnamestring and parameters value\nvar funcname=callDataFunctionString.slice(0,callDataFunctionString.indexOf(\"(\"));var parametersObjectsIterator=iface.getFunction(funcname).inputs.values();var parameters=[];var _iterator=_createForOfIteratorHelper(parametersObjectsIterator),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var elem=_step.value;parameters.push(elem.name.toString());}}catch(err){_iterator.e(err);}finally{_iterator.f();}setEncodedCalldataOutput(iface.encodeFunctionData(funcname,parameters));},children:\"Calculate Calldata\"}),/*#__PURE__*/_jsx(\"h1\",{style:{marginTop:32,fontSize:\"0.7rem\"},children:encodedCalldataOutput})]}),/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tx Hash signer\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:4,textAlign:\"left\"},children:\"Hash to sign: \\xA0\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Input,{style:{width:800},placeholder:\"TX hash 0x...\",value:txHashSignerInput,onChange:function onChange(e){setTxHashSignerInput(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{style:{marginTop:32},onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var signature;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return userProviderAndSigner.signer.signMessage(ethers.utils.arrayify(txHashSignerInput));case 2:signature=_context2.sent;setOutputSignature(signature);case 4:case\"end\":return _context2.stop();}}},_callee2);})),children:\"Sign\"}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:32,fontSize:\"0.7rem\"},children:outputSignature})]}),/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64,marginBottom:100},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Execute Transaction\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32},children:[/*#__PURE__*/_jsx(\"h2\",{style:{display:\"inline-block\"},children:\"Actual nonce: \\xA0\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"3rem\",display:\"inline-block\"},children:/*#__PURE__*/_jsx(Input,{prefix:\"#\",disabled:true,value:customNonce,placeholder:\"\"+(nonce?nonce.toNumber():\"loading...\"),onChange:function onChange(_value){setCustomNonce(_value);}})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:32,marginBottom:64},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Destination address: \\xA0\"}),/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Value: \\xA0\"}),/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"left\"},children:\"Calldata: \\xA0\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AddressInput,{autoFocus:true,ensProvider:mainnetProvider,placeholder:\"Enter address\",value:executerToAddress,onChange:function onChange(_address){setExecuterToAddress(_address);}}),/*#__PURE__*/_jsx(EtherInput,{price:price,value:executerValue,onChange:function onChange(_value){setExecuterValue(_value);}}),/*#__PURE__*/_jsx(Input,{placeholder:\"calldata\",value:executerData,onChange:function onChange(e){setExecuterData(e.target.value);}})]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Signatures\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{style:{marginTop:32},onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return setExecuterSignaturesArray(new Array(signaturesRequired));case 2:case\"end\":return _context3.stop();}}},_callee3);})),children:\"Render signatures input\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32},children:executerSignaturesArray.map(function(signature,signatureIndex){return/*#__PURE__*/_jsx(Input,{placeholder:\"signature n\"+signatureIndex,value:signature,onChange:function onChange(e){setExecuterSignaturesArray([].concat(_toConsumableArray(executerSignaturesArray.slice(0,signatureIndex)),[e.target.value],_toConsumableArray(executerSignaturesArray.slice(signatureIndex+1,executerSignaturesArray.lenght))));}});})}),/*#__PURE__*/_jsx(Button,{style:{marginTop:32},onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var connectedContract;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0://get contract instance connected to wallet provider\nconnectedContract=readContracts.MetaMultiSigWallet.connect(userProviderAndSigner.signer);//execute transaction            \n_context4.next=3;return connectedContract.executeTransaction(executerToAddress,parseEther(\"\"+parseFloat(executerValue).toFixed(12)),executerData,executerSignaturesArray);case 3:case\"end\":return _context4.stop();}}},_callee4);})),children:\"Execute TX\"})]})]});}export default Home;","map":{"version":3,"sources":["/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Home.jsx"],"names":["useContractReader","useContractLoader","useUserAddress","ethers","Input","Button","Spin","List","React","useState","useRef","Link","AddressInput","EtherInput","Address","Balance","parseEther","formatEther","Home","yourLocalBalance","readContracts","mainnetProvider","price","DepositEvents","ExecuteTransactionEvents","OwnerEvents","blockExplorer","localProvider","contractConfig","chainId","userProviderAndSigner","customNonce","setCustomNonce","toAddress","setToAddress","value","setValue","data","setData","txHash","setTxHash","callDataFunctionString","setCallDataFunctionString","encodedCalldataOutput","setEncodedCalldataOutput","txHashSignerInput","setTxHashSignerInput","outputSignature","setOutputSignature","nonce","signaturesRequired","contracts","multiSigAddress","MetaMultiSigWallet","address","userAddress","executerToAddress","setExecuterToAddress","executerValue","setExecuterValue","executerData","setExecuterData","executerSignaturesArray","setExecuterSignaturesArray","border","padding","width","margin","marginTop","display","justifyContent","dislpay","toNumber","maxWidth","item","args","owner","added","sender","amount","marginBottom","to","textAlign","_value","e","target","getTransactionHash","parseFloat","toFixed","newHash","height","trim","temp","concat","ABI","iface","utils","Interface","funcname","slice","indexOf","parametersObjectsIterator","getFunction","inputs","values","parameters","elem","push","name","toString","encodeFunctionData","fontSize","signer","signMessage","arrayify","signature","_address","Array","map","signatureIndex","lenght","connectedContract","connect","executeTransaction"],"mappings":"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","sourcesContent":["import { useContractReader, useContractLoader, useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport { Input, Button, Spin, List} from \"antd\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AddressInput, EtherInput, Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\nfunction Home({\n  yourLocalBalance,\n  readContracts,\n  mainnetProvider,\n  price, DepositEvents,\n  ExecuteTransactionEvents,\n  OwnerEvents,\n  blockExplorer,\n  localProvider,\n  contractConfig,\n  chainId,\n  userProviderAndSigner\n}) {\n\n\n\n  //State variables\n  const [customNonce, setCustomNonce] = useState();\n\n  //Hash calculator\n  const [toAddress, setToAddress] = useState();\n  const [value, setValue] = useState();\n  const [data, setData] = useState(\"0x\");\n  const [txHash, setTxHash] = useState(\"0x\");\n\n\n  //Calldata calculator\n  const [callDataFunctionString, setCallDataFunctionString] = useState(\"\");\n  const [encodedCalldataOutput, setEncodedCalldataOutput] = useState(\"0x\");\n\n  //Hash signer\n  const [txHashSignerInput, setTxHashSignerInput] = useState(\"\");\n  const [outputSignature, setOutputSignature] = useState(\"0x\");\n\n\n  // you can also use hooks locally in your component of choice\n  // in this case, let's keep track of 'nonce' variable from our contract\n  const nonce = useContractReader(readContracts, \"MetaMultiSigWallet\", \"nonce\");\n  const signaturesRequired = useContractReader(readContracts, \"MetaMultiSigWallet\", \"signaturesRequired\");\n  const contracts = useContractLoader(localProvider, contractConfig, chainId);\n  const multiSigAddress = contracts.MetaMultiSigWallet ? contracts.MetaMultiSigWallet.address : \"\";\n  const userAddress = useUserAddress(userProviderAndSigner);\n\n  //TX Executer\n  const [executerToAddress, setExecuterToAddress] = useState();\n  const [executerValue, setExecuterValue] = useState();\n  const [executerData, setExecuterData] = useState(\"0x\");\n  const [executerSignaturesArray, setExecuterSignaturesArray] = useState([]);\n \n  \n\n\n\n  return (\n    <div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Chest info</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h2 style={{ marginTop: 9 }}> Contract Address: &nbsp;</h2>\n          <Address\n            address={multiSigAddress}\n            ensProvider={localProvider}\n            blockExplorer={blockExplorer}\n            fontSize={25}\n          />\n        </div>\n        <div style={{ marginTop: 32, dislpay: \"flex\", justifyContent: \"center\" }}>\n          <h2 style={{ marginTop: 32 }}>Signatures Required: {signaturesRequired ? signaturesRequired.toNumber() : <Spin></Spin>}</h2>\n          <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n            <h2 style={{ marginTop: 9 }}> Balance:</h2>\n            {contracts.MetaMultiSigWallet ? <Balance\n              address={multiSigAddress}\n              provider={localProvider}\n              price={price}\n            /> : <Spin style={{ marginTop: 9 }}></Spin>}\n          </div>\n          <h2 style={{ marginTop: 32 }}> Owners List</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={OwnerEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"owner_\" + item.args.owner}>\n                  <Address \n                    address={item.args.owner}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    {item.args.added ? \"üëç\" : \"üëé\"}\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Funding events</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={DepositEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>From:</h3>\n                  <Address\n                    address={item.args.sender}\n                    ensProvider={localProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.amount}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Successful executed transactions log </h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32, marginBottom: 32 }}\n            bordered\n            dataSource={ExecuteTransactionEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>To:</h3>\n                  <Address\n                    address={item.args.to}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.value}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>TX Hash calculator</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={setCustomNonce}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={toAddress}\n              onChange={setToAddress}\n            />\n            <EtherInput\n              price={price}\n              value={value}\n              onChange={_value => {\n                setValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata 0x...\"\n              value={data}\n              onChange={e => {\n                setData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let newHash = await readContracts.MetaMultiSigWallet.getTransactionHash(nonce, toAddress, parseEther(\"\" + parseFloat(value).toFixed(12)), data);\n            setTxHash(newHash);\n          }}\n        >\n          Calculate Hash\n        </Button>\n        <h2 style={{ marginTop: 32 }}>{txHash}</h2>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Calldata calculator</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h3 style={{ margin: \"auto\" }}>Function signature: &nbsp; &nbsp;</h3>\n          <Input style={{ height: 30, width: 800 }}\n            placeholder=\"i.e addSigner(address 0x50Fc27c707c0f83447939532A8d9218417a21321, uint256 2)\"\n            value={callDataFunctionString}\n            onChange={e => {\n              setCallDataFunctionString(e.target.value);\n            }}\n          />\n\n\n\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={() => {\n            //create interface object from input\n            callDataFunctionString.trim();\n            let temp = \"function \".concat(callDataFunctionString);\n            let ABI = [temp];\n            let iface = new ethers.utils.Interface(ABI);\n\n            //extract funcnamestring and parameters value\n            let funcname = callDataFunctionString.slice(0, callDataFunctionString.indexOf(\"(\"));\n            let parametersObjectsIterator = iface.getFunction(funcname).inputs.values();\n            let parameters = [];\n            for (const elem of parametersObjectsIterator) {\n              parameters.push(elem.name.toString());\n            }\n\n            setEncodedCalldataOutput(iface.encodeFunctionData(funcname, parameters));\n\n          }}\n        >\n          Calculate Calldata\n        </Button>\n        <h1 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{encodedCalldataOutput}</h1>\n\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Tx Hash signer</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ marginTop: 4, textAlign: \"left\" }}>Hash to sign: &nbsp;</h3>\n          </div>\n          <div>\n            <Input style={{ width: 800 }}\n              placeholder=\"TX hash 0x...\"\n              value={txHashSignerInput}\n              onChange={e => {\n                setTxHashSignerInput(e.target.value);\n              }}\n\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let signature = await userProviderAndSigner.signer.signMessage(ethers.utils.arrayify(txHashSignerInput));\n            setOutputSignature(signature);\n          }}\n        >\n          Sign\n        </Button>\n        <h2 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{outputSignature}</h2>\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64, marginBottom: 100 }}>\n        <h1>Execute Transaction</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={(_value) =>{\n                setCustomNonce(_value)\n              }}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32, marginBottom: 64 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={executerToAddress}\n              onChange={_address =>{ \n                setExecuterToAddress(_address);\n                }   \n              }\n            />\n            <EtherInput\n              price={price}\n              value={executerValue}\n              onChange={_value => {\n                setExecuterValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata\"\n              value={executerData}\n              onChange={e => {\n                setExecuterData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <h2>Signatures</h2>\n        <div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {await setExecuterSignaturesArray(new Array(signaturesRequired))}}\n        >Render signatures input</Button>\n        </div>\n        <div style={{ marginTop: 32 }}>\n        {\n        executerSignaturesArray.map((signature, signatureIndex) => (\n          <Input\n          placeholder={\"signature n\" + signatureIndex}\n          value = {signature}\n          onChange={e => {\n            setExecuterSignaturesArray([\n              ...executerSignaturesArray.slice(0,signatureIndex),\n              e.target.value,\n              ...executerSignaturesArray.slice(signatureIndex + 1,executerSignaturesArray.lenght)\n            ]);\n          }}\n        />\n        ))}\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            //get contract instance connected to wallet provider\n            const connectedContract = readContracts.MetaMultiSigWallet.connect(userProviderAndSigner.signer);\n            //execute transaction            \n            await connectedContract.executeTransaction(executerToAddress, parseEther(\"\" + parseFloat(executerValue).toFixed(12)), executerData, executerSignaturesArray);\n          }}\n        >\n          Execute TX\n        </Button>\n      </div>\n\n\n    </div >\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}