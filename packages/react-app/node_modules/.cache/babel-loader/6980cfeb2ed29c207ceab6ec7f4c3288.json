{"ast":null,"code":"import _objectSpread from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _regeneratorRuntime from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/meta-multi-sig-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _excluded=[\"onChange\",\"chainId\",\"nativeToken\",\"localProvider\"];/* eslint-disable react-hooks/exhaustive-deps */import{Select}from\"antd\";import{useState,useMemo,useEffect}from\"react\";import{ethers}from\"ethers\";import axios from\"axios\";import searchico from\"searchico\";// helpers to load token name and symbol for unlisted tokens\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ERC20ABI=[\"function symbol() view returns (string)\",\"function name() view returns (string)\"];var loadERC20=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address,p){var _r$name,_r$symbol,r,name,symbol;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;// load token information here\nr=new ethers.Contract(address,ERC20ABI,p);_context.next=4;return(_r$name=r.name)===null||_r$name===void 0?void 0:_r$name.call(r);case 4:name=_context.sent;_context.next=7;return(_r$symbol=r.symbol)===null||_r$symbol===void 0?void 0:_r$symbol.call(r);case 7:symbol=_context.sent;return _context.abrupt(\"return\",{name:name,symbol:symbol});case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function loadERC20(_x,_x2){return _ref.apply(this,arguments);};}();/*\n  <TokenSelect\n    chainId={1}\n    onChange={setToAddress}\n    localProvider={localProvider}\n    nativeToken={{ name: 'Native token', symbol: 'ETH' }}\n  />\n*/export default function TokenSelect(_ref2){var onChange=_ref2.onChange,_ref2$chainId=_ref2.chainId,chainId=_ref2$chainId===void 0?1:_ref2$chainId,_ref2$nativeToken=_ref2.nativeToken,nativeToken=_ref2$nativeToken===void 0?{}:_ref2$nativeToken,localProvider=_ref2.localProvider,props=_objectWithoutProperties(_ref2,_excluded);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],setList=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),searchResults=_useState6[0],setSearchResults=_useState6[1];var listCollection=useMemo(function(){return searchico(list,{keys:[\"address\",\"name\",\"symbol\"]});},[list.length]);var children=useMemo(function(){if(searchResults.length<1){return[];}// use search result to format children\nreturn searchResults.map(function(i){var _i$address,_i$address2;return/*#__PURE__*/_jsx(Select.Option,{style:{paddingTop:\"5px\",paddingBottom:\"5px\"},value:i.address,children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\"},children:[i.logoURI&&/*#__PURE__*/_jsx(\"div\",{style:{marginRight:\"5px\"},children:/*#__PURE__*/_jsx(\"img\",{src:i.logoURI,alt:\"\".concat(i.name,\" (\").concat(i.symbol,\")\")})}),i.name,\" - \",i.symbol,\" \",((_i$address=i.address)===null||_i$address===void 0?void 0:_i$address.substr(0,5))+\"...\"+((_i$address2=i.address)===null||_i$address2===void 0?void 0:_i$address2.substr(-4)),\" \",i.unlisted&&/*#__PURE__*/_jsx(\"span\",{style:{fontStyle:\"italic\",fontSize:\"12px\",marginLeft:\"3px\"},children:\" (unlisted) \"})]})},i.address);});},[JSON.stringify(searchResults)]);var handleSearch=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(val){var collectionResult,nativeTokenObj,checksumAddress,tokenInfo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionResult=[];if(!(val.length>0)){_context2.next=22;break;}// TODO : Do all search & filtering here\ncollectionResult=((listCollection===null||listCollection===void 0?void 0:listCollection.find(val))||[]).filter(function(i){return i.chainId===chainId;});if(!(collectionResult.length<1)){_context2.next=22;break;}nativeTokenObj=_objectSpread({chainId:chainId,decimals:18,name:\"Native Token\",symbol:\"ETH\",address:\"0x0000000000000000000000000000000000000000\",logoURI:\"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880\"},nativeToken);collectionResult.push(nativeTokenObj);_context2.prev=6;checksumAddress=ethers.utils.getAddress(val);// load contract and try to get name and symbol if there's a provider given\nif(!localProvider){_context2.next=14;break;}_context2.next=11;return loadERC20(checksumAddress,localProvider);case 11:_context2.t0=_context2.sent;_context2.next=15;break;case 14:_context2.t0={};case 15:tokenInfo=_context2.t0;collectionResult=[_objectSpread({chainId:chainId,name:null,unlisted:true,symbol:null,address:checksumAddress,logoURI:\"\"},tokenInfo)];_context2.next=22;break;case 19:_context2.prev=19;_context2.t1=_context2[\"catch\"](6);console.log(\"Could not identify this token\");case 22:setSearchResults(collectionResult);case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[6,19]]);}));return function handleSearch(_x3){return _ref3.apply(this,arguments);};}();var handleOnChange=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setSearchResults([]);// TODO : check if it's an address that's not on list & Add as unlisted\nsetValue(e);if(typeof onChange===\"function\"){onChange(e.value);}case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function handleOnChange(_x4){return _ref4.apply(this,arguments);};}();var loadList=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var res,tokens;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.get(\"https://tokens.coingecko.com/uniswap/all.json\");case 2:res=_context4.sent;tokens=res.data.tokens;setList(tokens);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function loadList(){return _ref5.apply(this,arguments);};}();useEffect(function(){loadList();},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Select,{showSearch:true,size:\"large\",showArrow:false,defaultActiveFirstOption:false,onSearch:handleSearch,filterOption:false,labelInValue:true,id:\"0xERC20TokenSelect\"// name it something other than address for auto fill doxxing\n,name:\"0xERC20TokenSelect\"// name it something other than address for auto fill doxxing\n,placeholder:props.placeholder?props.placeholder:\"Token search... Eg: GTC\",value:value,onChange:handleOnChange,notFoundContent:null,style:{width:\"100%\"},children:children})});}","map":{"version":3,"sources":["/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/TokenSelect.jsx"],"names":["Select","useState","useMemo","useEffect","ethers","axios","searchico","ERC20ABI","loadERC20","address","p","r","Contract","name","symbol","TokenSelect","onChange","chainId","nativeToken","localProvider","props","value","setValue","list","setList","searchResults","setSearchResults","listCollection","keys","length","children","map","i","paddingTop","paddingBottom","display","alignItems","logoURI","marginRight","substr","unlisted","fontStyle","fontSize","marginLeft","JSON","stringify","handleSearch","val","collectionResult","find","filter","nativeTokenObj","decimals","push","checksumAddress","utils","getAddress","tokenInfo","console","log","handleOnChange","e","loadList","get","res","tokens","data","placeholder","width"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Select } from \"antd\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport searchico from \"searchico\";\n\n// helpers to load token name and symbol for unlisted tokens\nconst ERC20ABI = [\"function symbol() view returns (string)\", \"function name() view returns (string)\"];\n\nconst loadERC20 = async (address, p) => {\n  try {\n    // load token information here\n    const r = new ethers.Contract(address, ERC20ABI, p);\n    const name = await r.name?.();\n    const symbol = await r.symbol?.();\n\n    return { name, symbol };\n  } catch (error) {\n    return {};\n  }\n};\n\n/*\n  <TokenSelect\n    chainId={1}\n    onChange={setToAddress}\n    localProvider={localProvider}\n    nativeToken={{ name: 'Native token', symbol: 'ETH' }}\n  />\n*/\nexport default function TokenSelect({ onChange, chainId = 1, nativeToken = {}, localProvider, ...props }) {\n  const [value, setValue] = useState(null);\n  const [list, setList] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const listCollection = useMemo(() => {\n    return searchico(list, { keys: [\"address\", \"name\", \"symbol\"] });\n  }, [list.length]);\n\n  const children = useMemo(() => {\n    if (searchResults.length < 1) {\n      return [];\n    }\n\n    // use search result to format children\n    return searchResults.map(i => (\n      <Select.Option key={i.address} style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }} value={i.address}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {i.logoURI && (\n            <div style={{ marginRight: \"5px\" }}>\n              <img src={i.logoURI} alt={`${i.name} (${i.symbol})`} />\n            </div>\n          )}\n          {i.name} - {i.symbol} {i.address?.substr(0, 5) + \"...\" + i.address?.substr(-4)}{\" \"}\n          {i.unlisted && <span style={{ fontStyle: \"italic\", fontSize: \"12px\", marginLeft: \"3px\" }}> (unlisted) </span>}\n        </div>\n      </Select.Option>\n    ));\n  }, [JSON.stringify(searchResults)]);\n\n  const handleSearch = async val => {\n    let collectionResult = [];\n\n    if (val.length > 0) {\n      // TODO : Do all search & filtering here\n      collectionResult = (listCollection?.find(val) || []).filter(i => i.chainId === chainId);\n\n      if (collectionResult.length < 1) {\n        const nativeTokenObj = {\n          chainId: chainId,\n          decimals: 18,\n          name: \"Native Token\",\n          symbol: \"ETH\",\n          address: \"0x0000000000000000000000000000000000000000\",\n          logoURI: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880\",\n          ...nativeToken,\n        };\n\n        collectionResult.push(nativeTokenObj);\n\n        try {\n          const checksumAddress = ethers.utils.getAddress(val);\n          // load contract and try to get name and symbol if there's a provider given\n          const tokenInfo = localProvider ? await loadERC20(checksumAddress, localProvider) : {};\n          collectionResult = [\n            {\n              chainId: chainId,\n              name: null,\n              unlisted: true,\n              symbol: null,\n              address: checksumAddress,\n              logoURI: \"\",\n              ...tokenInfo,\n            },\n          ];\n        } catch (error) {\n          console.log(`Could not identify this token`);\n        }\n      }\n    }\n\n    setSearchResults(collectionResult);\n  };\n\n  const handleOnChange = async e => {\n    setSearchResults([]);\n\n    // TODO : check if it's an address that's not on list & Add as unlisted\n\n    setValue(e);\n\n    if (typeof onChange === \"function\") {\n      onChange(e.value);\n    }\n  };\n\n  const loadList = async () => {\n    // https://tokens.coingecko.com/uniswap/all.json\n    const res = await axios.get(\"https://tokens.coingecko.com/uniswap/all.json\");\n    const { tokens } = res.data;\n\n    setList(tokens);\n  };\n\n  useEffect(() => {\n    loadList();\n  }, []);\n\n  return (\n    <div>\n      <Select\n        showSearch\n        size=\"large\"\n        showArrow={false}\n        defaultActiveFirstOption={false}\n        onSearch={handleSearch}\n        filterOption={false}\n        labelInValue={true}\n        id=\"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n        name=\"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n        placeholder={props.placeholder ? props.placeholder : \"Token search... Eg: GTC\"}\n        value={value}\n        onChange={handleOnChange}\n        notFoundContent={null}\n        style={{ width: \"100%\" }}\n      >\n        {children}\n      </Select>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}