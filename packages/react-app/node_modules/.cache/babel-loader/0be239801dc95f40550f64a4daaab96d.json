{"ast":null,"code":"var _jsxFileName = \"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContractReader, useContractLoader, useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport { Input, Button, Spin, List } from \"antd\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AddressInput, EtherInput, Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  yourLocalBalance,\n  readContracts,\n  mainnetProvider,\n  price,\n  DepositEvents,\n  ExecuteTransactionEvents,\n  OwnerEvents,\n  blockExplorer,\n  localProvider,\n  contractConfig,\n  chainId,\n  userProviderAndSigner\n}) {\n  _s();\n\n  //State variables\n  const [customNonce, setCustomNonce] = useState(); //Hash calculator\n\n  const [toAddress, setToAddress] = useState();\n  const [value, setValue] = useState();\n  const [data, setData] = useState(\"0x\");\n  const [txHash, setTxHash] = useState(\"0x\"); //Calldata calculator\n\n  const [callDataFunctionString, setCallDataFunctionString] = useState(\"\");\n  const [encodedCalldataOutput, setEncodedCalldataOutput] = useState(\"0x\"); //Hash signer\n\n  const [txHashSignerInput, setTxHashSignerInput] = useState(\"\");\n  const [outputSignature, setOutputSignature] = useState(\"0x\"); // you can also use hooks locally in your component of choice\n  // in this case, let's keep track of 'nonce' variable from our contract\n\n  const nonce = useContractReader(readContracts, \"MetaMultiSigWallet\", \"nonce\");\n  const signaturesRequired = useContractReader(readContracts, \"MetaMultiSigWallet\", \"signaturesRequired\");\n  const contracts = useContractLoader(localProvider, contractConfig, chainId);\n  const multiSigAddress = contracts.MetaMultiSigWallet ? contracts.MetaMultiSigWallet.address : \"\";\n  const userAddress = useUserAddress(userProviderAndSigner); //TX Executer\n\n  const [executerToAddress, setExecuterToAddress] = useState();\n  const [executerValue, setExecuterValue] = useState();\n  const [executerData, setExecuterData] = useState(\"0x\");\n  const [executerSignaturesArray, setExecuterSignaturesArray] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 1000,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chest info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 9\n          },\n          children: \" Contract Address: \\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Address, {\n          address: multiSigAddress,\n          ensProvider: localProvider,\n          blockExplorer: blockExplorer,\n          fontSize: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32,\n          dislpay: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 32\n          },\n          children: [\"Signatures Required: \", signaturesRequired ? signaturesRequired.toNumber() : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 116\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: 32\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginTop: 9\n            },\n            children: \" Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), contracts.MetaMultiSigWallet ? /*#__PURE__*/_jsxDEV(Balance, {\n            address: multiSigAddress,\n            provider: localProvider,\n            price: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Spin, {\n            style: {\n              marginTop: 9\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 32\n          },\n          children: \" Owners List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            maxWidth: 600,\n            margin: \"auto\",\n            marginTop: 32\n          },\n          bordered: true,\n          dataSource: OwnerEvents,\n          renderItem: item => {\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(Address, {\n                address: item.args.owner,\n                ensProvider: mainnetProvider,\n                blockExplorer: blockExplorer,\n                fontSize: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 16\n                },\n                children: item.args.added ? \"👍\" : \"👎\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, \"owner_\" + item.args.owner, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 32\n          },\n          children: \" Funding events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            maxWidth: 600,\n            margin: \"auto\",\n            marginTop: 32\n          },\n          bordered: true,\n          dataSource: DepositEvents,\n          renderItem: item => {\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"From:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Address, {\n                address: item.args.sender,\n                ensProvider: localProvider,\n                blockExplorer: blockExplorer,\n                fontSize: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 16\n                },\n                children: [\"amount: \", /*#__PURE__*/_jsxDEV(Balance, {\n                  balance: item.args.amount,\n                  price: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, \"sender_\" + item.args.sender, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 32\n          },\n          children: \" Successful executed transactions log \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            maxWidth: 600,\n            margin: \"auto\",\n            marginTop: 32,\n            marginBottom: 32\n          },\n          bordered: true,\n          dataSource: ExecuteTransactionEvents,\n          renderItem: item => {\n            return /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"To:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Address, {\n                address: item.args.to,\n                ensProvider: mainnetProvider,\n                blockExplorer: blockExplorer,\n                fontSize: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 16\n                },\n                children: [\"amount: \", /*#__PURE__*/_jsxDEV(Balance, {\n                  balance: item.args.value,\n                  price: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, \"sender_\" + item.args.sender, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 1000,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TX Hash calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: \"Actual nonce: \\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"3rem\",\n            display: \"inline-block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: \"#\",\n            disabled: true,\n            value: customNonce,\n            placeholder: \"\" + (nonce ? nonce.toNumber() : \"loading...\"),\n            onChange: setCustomNonce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Destination address: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Value: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Calldata: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AddressInput, {\n            autoFocus: true,\n            ensProvider: mainnetProvider,\n            placeholder: \"Enter address\",\n            value: toAddress,\n            onChange: setToAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EtherInput, {\n            price: price,\n            value: value,\n            onChange: _value => {\n              setValue(_value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"calldata 0x...\",\n            value: data,\n            onChange: e => {\n              setData(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 32\n        },\n        onClick: async () => {\n          let newHash = await readContracts.MetaMultiSigWallet.getTransactionHash(nonce, toAddress, parseEther(\"\" + parseFloat(value).toFixed(12)), data);\n          setTxHash(newHash);\n        },\n        children: \"Calculate Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 32\n        },\n        children: txHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 1000,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calldata calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: \"auto\"\n          },\n          children: \"Function signature: \\xA0 \\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            height: 30,\n            width: 800\n          },\n          placeholder: \"i.e addSigner(address 0x50Fc27c707c0f83447939532A8d9218417a21321, uint256 2)\",\n          value: callDataFunctionString,\n          onChange: e => {\n            setCallDataFunctionString(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 32\n        },\n        onClick: () => {\n          //create interface object from input\n          callDataFunctionString.trim();\n          let temp = \"function \".concat(callDataFunctionString);\n          let ABI = [temp];\n          let iface = new ethers.utils.Interface(ABI); //extract funcnamestring and parameters value\n\n          let funcname = callDataFunctionString.slice(0, callDataFunctionString.indexOf(\"(\"));\n          let parametersObjectsIterator = iface.getFunction(funcname).inputs.values();\n          let parameters = [];\n\n          for (const elem of parametersObjectsIterator) {\n            parameters.push(elem.name.toString());\n          }\n\n          setEncodedCalldataOutput(iface.encodeFunctionData(funcname, parameters));\n        },\n        children: \"Calculate Calldata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: 32,\n          fontSize: \"0.7rem\"\n        },\n        children: encodedCalldataOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 1000,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tx Hash signer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 4,\n              textAlign: \"left\"\n            },\n            children: \"Hash to sign: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: 800\n            },\n            placeholder: \"TX hash 0x...\",\n            value: txHashSignerInput,\n            onChange: e => {\n              setTxHashSignerInput(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 32\n        },\n        onClick: async () => {\n          let signature = await userProviderAndSigner.signer.signMessage(ethers.utils.arrayify(txHashSignerInput));\n          setOutputSignature(signature);\n        },\n        children: \"Sign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 32,\n          fontSize: \"0.7rem\"\n        },\n        children: outputSignature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 1000,\n        margin: \"auto\",\n        marginTop: 64,\n        marginBottom: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Execute Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: \"Actual nonce: \\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"3rem\",\n            display: \"inline-block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: \"#\",\n            disabled: true,\n            value: customNonce,\n            placeholder: \"\" + (nonce ? nonce.toNumber() : \"loading...\"),\n            onChange: _value => {\n              setCustomNonce(_value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 32,\n          marginBottom: 64\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Destination address: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Value: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: \"Calldata: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AddressInput, {\n            autoFocus: true,\n            ensProvider: mainnetProvider,\n            placeholder: \"Enter address\",\n            value: executerToAddress,\n            onChange: _address => {\n              setExecuterToAddress(_address);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EtherInput, {\n            price: price,\n            value: executerValue,\n            onChange: _value => {\n              setExecuterValue(_value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"calldata\",\n            value: executerData,\n            onChange: e => {\n              setExecuterData(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signatures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 32\n          },\n          onClick: async () => {\n            await setExecuterSignaturesArray(new Array(signaturesRequired));\n          },\n          children: \"Render signatures input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 32\n        },\n        children: executerSignaturesArray.map((signature, signatureIndex) => /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"signature n\" + signatureIndex,\n          value: signature,\n          onChange: e => {\n            setExecuterSignaturesArray([...executerSignaturesArray.slice(0, signatureIndex), e.target.value, ...executerSignaturesArray.slice(signatureIndex + 1, executerSignaturesArray.lenght)]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 32\n        },\n        onClick: async () => {\n          //get contract instance connected to wallet provider\n          const connectedContract = readContracts.MetaMultiSigWallet.connect(userProviderAndSigner.signer); //execute transaction            \n\n          await connectedContract.executeTransaction(executerToAddress, parseEther(\"\" + parseFloat(executerValue).toFixed(12)), executerData, executerSignaturesArray);\n        },\n        children: \"Execute TX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"mmCyzHQfE4LAaPAvJZO3Nk+9fmQ=\", false, function () {\n  return [useContractReader, useContractReader, useContractLoader, useUserAddress];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Home.jsx"],"names":["useContractReader","useContractLoader","useUserAddress","ethers","Input","Button","Spin","List","React","useState","useRef","Link","AddressInput","EtherInput","Address","Balance","parseEther","formatEther","Home","yourLocalBalance","readContracts","mainnetProvider","price","DepositEvents","ExecuteTransactionEvents","OwnerEvents","blockExplorer","localProvider","contractConfig","chainId","userProviderAndSigner","customNonce","setCustomNonce","toAddress","setToAddress","value","setValue","data","setData","txHash","setTxHash","callDataFunctionString","setCallDataFunctionString","encodedCalldataOutput","setEncodedCalldataOutput","txHashSignerInput","setTxHashSignerInput","outputSignature","setOutputSignature","nonce","signaturesRequired","contracts","multiSigAddress","MetaMultiSigWallet","address","userAddress","executerToAddress","setExecuterToAddress","executerValue","setExecuterValue","executerData","setExecuterData","executerSignaturesArray","setExecuterSignaturesArray","border","padding","width","margin","marginTop","display","justifyContent","dislpay","toNumber","maxWidth","item","args","owner","added","sender","amount","marginBottom","to","textAlign","_value","e","target","newHash","getTransactionHash","parseFloat","toFixed","height","trim","temp","concat","ABI","iface","utils","Interface","funcname","slice","indexOf","parametersObjectsIterator","getFunction","inputs","values","parameters","elem","push","name","toString","encodeFunctionData","fontSize","signature","signer","signMessage","arrayify","_address","Array","map","signatureIndex","lenght","connectedContract","connect","executeTransaction"],"mappings":"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","sourcesContent":["import { useContractReader, useContractLoader, useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport { Input, Button, Spin, List} from \"antd\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AddressInput, EtherInput, Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\nfunction Home({\n  yourLocalBalance,\n  readContracts,\n  mainnetProvider,\n  price, DepositEvents,\n  ExecuteTransactionEvents,\n  OwnerEvents,\n  blockExplorer,\n  localProvider,\n  contractConfig,\n  chainId,\n  userProviderAndSigner\n}) {\n\n\n\n  //State variables\n  const [customNonce, setCustomNonce] = useState();\n\n  //Hash calculator\n  const [toAddress, setToAddress] = useState();\n  const [value, setValue] = useState();\n  const [data, setData] = useState(\"0x\");\n  const [txHash, setTxHash] = useState(\"0x\");\n\n\n  //Calldata calculator\n  const [callDataFunctionString, setCallDataFunctionString] = useState(\"\");\n  const [encodedCalldataOutput, setEncodedCalldataOutput] = useState(\"0x\");\n\n  //Hash signer\n  const [txHashSignerInput, setTxHashSignerInput] = useState(\"\");\n  const [outputSignature, setOutputSignature] = useState(\"0x\");\n\n\n  // you can also use hooks locally in your component of choice\n  // in this case, let's keep track of 'nonce' variable from our contract\n  const nonce = useContractReader(readContracts, \"MetaMultiSigWallet\", \"nonce\");\n  const signaturesRequired = useContractReader(readContracts, \"MetaMultiSigWallet\", \"signaturesRequired\");\n  const contracts = useContractLoader(localProvider, contractConfig, chainId);\n  const multiSigAddress = contracts.MetaMultiSigWallet ? contracts.MetaMultiSigWallet.address : \"\";\n  const userAddress = useUserAddress(userProviderAndSigner);\n\n  //TX Executer\n  const [executerToAddress, setExecuterToAddress] = useState();\n  const [executerValue, setExecuterValue] = useState();\n  const [executerData, setExecuterData] = useState(\"0x\");\n  const [executerSignaturesArray, setExecuterSignaturesArray] = useState([]);\n \n  \n\n\n\n  return (\n    <div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Chest info</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h2 style={{ marginTop: 9 }}> Contract Address: &nbsp;</h2>\n          <Address\n            address={multiSigAddress}\n            ensProvider={localProvider}\n            blockExplorer={blockExplorer}\n            fontSize={25}\n          />\n        </div>\n        <div style={{ marginTop: 32, dislpay: \"flex\", justifyContent: \"center\" }}>\n          <h2 style={{ marginTop: 32 }}>Signatures Required: {signaturesRequired ? signaturesRequired.toNumber() : <Spin></Spin>}</h2>\n          <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n            <h2 style={{ marginTop: 9 }}> Balance:</h2>\n            {contracts.MetaMultiSigWallet ? <Balance\n              address={multiSigAddress}\n              provider={localProvider}\n              price={price}\n            /> : <Spin style={{ marginTop: 9 }}></Spin>}\n          </div>\n          <h2 style={{ marginTop: 32 }}> Owners List</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={OwnerEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"owner_\" + item.args.owner}>\n                  <Address \n                    address={item.args.owner}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    {item.args.added ? \"👍\" : \"👎\"}\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Funding events</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={DepositEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>From:</h3>\n                  <Address\n                    address={item.args.sender}\n                    ensProvider={localProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.amount}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Successful executed transactions log </h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32, marginBottom: 32 }}\n            bordered\n            dataSource={ExecuteTransactionEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>To:</h3>\n                  <Address\n                    address={item.args.to}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.value}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>TX Hash calculator</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={setCustomNonce}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={toAddress}\n              onChange={setToAddress}\n            />\n            <EtherInput\n              price={price}\n              value={value}\n              onChange={_value => {\n                setValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata 0x...\"\n              value={data}\n              onChange={e => {\n                setData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let newHash = await readContracts.MetaMultiSigWallet.getTransactionHash(nonce, toAddress, parseEther(\"\" + parseFloat(value).toFixed(12)), data);\n            setTxHash(newHash);\n          }}\n        >\n          Calculate Hash\n        </Button>\n        <h2 style={{ marginTop: 32 }}>{txHash}</h2>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Calldata calculator</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h3 style={{ margin: \"auto\" }}>Function signature: &nbsp; &nbsp;</h3>\n          <Input style={{ height: 30, width: 800 }}\n            placeholder=\"i.e addSigner(address 0x50Fc27c707c0f83447939532A8d9218417a21321, uint256 2)\"\n            value={callDataFunctionString}\n            onChange={e => {\n              setCallDataFunctionString(e.target.value);\n            }}\n          />\n\n\n\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={() => {\n            //create interface object from input\n            callDataFunctionString.trim();\n            let temp = \"function \".concat(callDataFunctionString);\n            let ABI = [temp];\n            let iface = new ethers.utils.Interface(ABI);\n\n            //extract funcnamestring and parameters value\n            let funcname = callDataFunctionString.slice(0, callDataFunctionString.indexOf(\"(\"));\n            let parametersObjectsIterator = iface.getFunction(funcname).inputs.values();\n            let parameters = [];\n            for (const elem of parametersObjectsIterator) {\n              parameters.push(elem.name.toString());\n            }\n\n            setEncodedCalldataOutput(iface.encodeFunctionData(funcname, parameters));\n\n          }}\n        >\n          Calculate Calldata\n        </Button>\n        <h1 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{encodedCalldataOutput}</h1>\n\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Tx Hash signer</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ marginTop: 4, textAlign: \"left\" }}>Hash to sign: &nbsp;</h3>\n          </div>\n          <div>\n            <Input style={{ width: 800 }}\n              placeholder=\"TX hash 0x...\"\n              value={txHashSignerInput}\n              onChange={e => {\n                setTxHashSignerInput(e.target.value);\n              }}\n\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let signature = await userProviderAndSigner.signer.signMessage(ethers.utils.arrayify(txHashSignerInput));\n            setOutputSignature(signature);\n          }}\n        >\n          Sign\n        </Button>\n        <h2 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{outputSignature}</h2>\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64, marginBottom: 100 }}>\n        <h1>Execute Transaction</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={(_value) =>{\n                setCustomNonce(_value)\n              }}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32, marginBottom: 64 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={executerToAddress}\n              onChange={_address =>{ \n                setExecuterToAddress(_address);\n                }   \n              }\n            />\n            <EtherInput\n              price={price}\n              value={executerValue}\n              onChange={_value => {\n                setExecuterValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata\"\n              value={executerData}\n              onChange={e => {\n                setExecuterData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <h2>Signatures</h2>\n        <div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {await setExecuterSignaturesArray(new Array(signaturesRequired))}}\n        >Render signatures input</Button>\n        </div>\n        <div style={{ marginTop: 32 }}>\n        {\n        executerSignaturesArray.map((signature, signatureIndex) => (\n          <Input\n          placeholder={\"signature n\" + signatureIndex}\n          value = {signature}\n          onChange={e => {\n            setExecuterSignaturesArray([\n              ...executerSignaturesArray.slice(0,signatureIndex),\n              e.target.value,\n              ...executerSignaturesArray.slice(signatureIndex + 1,executerSignaturesArray.lenght)\n            ]);\n          }}\n        />\n        ))}\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            //get contract instance connected to wallet provider\n            const connectedContract = readContracts.MetaMultiSigWallet.connect(userProviderAndSigner.signer);\n            //execute transaction            \n            await connectedContract.executeTransaction(executerToAddress, parseEther(\"\" + parseFloat(executerValue).toFixed(12)), executerData, executerSignaturesArray);\n          }}\n        >\n          Execute TX\n        </Button>\n      </div>\n\n\n    </div >\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}