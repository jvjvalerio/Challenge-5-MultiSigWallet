{"ast":null,"code":"import{Button}from\"antd\";import React from\"react\";import{useThemeSwitcher}from\"react-css-theme-switcher\";import Address from\"./Address\";import Balance from\"./Balance\";import Wallet from\"./Wallet\";/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Account(_ref){var address=_ref.address,userSigner=_ref.userSigner,localProvider=_ref.localProvider,mainnetProvider=_ref.mainnetProvider,price=_ref.price,minimized=_ref.minimized,web3Modal=_ref.web3Modal,loadWeb3Modal=_ref.loadWeb3Modal,logoutOfWeb3Modal=_ref.logoutOfWeb3Modal,blockExplorer=_ref.blockExplorer,isContract=_ref.isContract;var _useThemeSwitcher=useThemeSwitcher(),currentTheme=_useThemeSwitcher.currentTheme;var accountButtonInfo;if(web3Modal===null||web3Modal===void 0?void 0:web3Modal.cachedProvider){accountButtonInfo={name:'Logout',action:logoutOfWeb3Modal};}else{accountButtonInfo={name:'Connect',action:loadWeb3Modal};}var display=!minimized&&/*#__PURE__*/_jsxs(\"span\",{children:[address&&/*#__PURE__*/_jsx(Address,{address:address,ensProvider:mainnetProvider,blockExplorer:blockExplorer,fontSize:20}),/*#__PURE__*/_jsx(Balance,{address:address,provider:localProvider,price:price,size:20}),!isContract&&/*#__PURE__*/_jsx(Wallet,{address:address,provider:localProvider,signer:userSigner,ensProvider:mainnetProvider,price:price,color:currentTheme===\"light\"?\"#1890ff\":\"#2caad9\",size:22,padding:\"0px\"})]});return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[display,web3Modal&&/*#__PURE__*/_jsx(Button,{style:{marginLeft:8},shape:\"round\",onClick:accountButtonInfo.action,children:accountButtonInfo.name})]});}","map":{"version":3,"sources":["/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Account.jsx"],"names":["Button","React","useThemeSwitcher","Address","Balance","Wallet","Account","address","userSigner","localProvider","mainnetProvider","price","minimized","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","blockExplorer","isContract","currentTheme","accountButtonInfo","cachedProvider","name","action","display","marginLeft"],"mappings":"AAAA,OAASA,MAAT,KAAuB,MAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,KAAiC,0BAAjC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,wFAEA,cAAe,SAASC,CAAAA,OAAT,MAYZ,IAXDC,CAAAA,OAWC,MAXDA,OAWC,CAVDC,UAUC,MAVDA,UAUC,CATDC,aASC,MATDA,aASC,CARDC,eAQC,MARDA,eAQC,CAPDC,KAOC,MAPDA,KAOC,CANDC,SAMC,MANDA,SAMC,CALDC,SAKC,MALDA,SAKC,CAJDC,aAIC,MAJDA,aAIC,CAHDC,iBAGC,MAHDA,iBAGC,CAFDC,aAEC,MAFDA,aAEC,CADDC,UACC,MADDA,UACC,CACD,sBAAyBf,gBAAgB,EAAzC,CAAQgB,YAAR,mBAAQA,YAAR,CAEA,GAAIC,CAAAA,iBAAJ,CACA,GAAIN,SAAJ,SAAIA,SAAJ,iBAAIA,SAAS,CAAEO,cAAf,CAA+B,CAC7BD,iBAAiB,CAAG,CAAEE,IAAI,CAAE,QAAR,CAAkBC,MAAM,CAAEP,iBAA1B,CAApB,CACD,CAFD,IAEO,CACLI,iBAAiB,CAAG,CAAEE,IAAI,CAAE,SAAR,CAAmBC,MAAM,CAAER,aAA3B,CAApB,CACD,CAED,GAAMS,CAAAA,OAAO,CAAG,CAACX,SAAD,eACd,wBACGL,OAAO,eACN,KAAC,OAAD,EACE,OAAO,CAAEA,OADX,CAEE,WAAW,CAAEG,eAFf,CAGE,aAAa,CAAEM,aAHjB,CAIE,QAAQ,CAAE,EAJZ,EAFJ,cASE,KAAC,OAAD,EAAS,OAAO,CAAET,OAAlB,CAA2B,QAAQ,CAAEE,aAArC,CAAoD,KAAK,CAAEE,KAA3D,CAAkE,IAAI,CAAE,EAAxE,EATF,CAUG,CAACM,UAAD,eACC,KAAC,MAAD,EACE,OAAO,CAAEV,OADX,CAEE,QAAQ,CAAEE,aAFZ,CAGE,MAAM,CAAED,UAHV,CAIE,WAAW,CAAEE,eAJf,CAKE,KAAK,CAAEC,KALT,CAME,KAAK,CAAEO,YAAY,GAAK,OAAjB,CAA2B,SAA3B,CAAuC,SANhD,CAOE,IAAI,CAAE,EAPR,CAQE,OAAO,CAAE,KARX,EAXJ,GADF,CA0BA,mBACE,aAAK,KAAK,CAAE,CAAEK,OAAO,CAAE,MAAX,CAAZ,WACGA,OADH,CAEGV,SAAS,eACR,KAAC,MAAD,EACE,KAAK,CAAE,CAAEW,UAAU,CAAE,CAAd,CADT,CAEE,KAAK,CAAC,OAFR,CAGE,OAAO,CAAEL,iBAAiB,CAACG,MAH7B,UAKGH,iBAAiB,CAACE,IALrB,EAHJ,GADF,CAcD","sourcesContent":["import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isContract,\n}) {\n  const { currentTheme } = useThemeSwitcher();\n\n  let accountButtonInfo;\n  if (web3Modal?.cachedProvider) {\n    accountButtonInfo = { name: 'Logout', action: logoutOfWeb3Modal };\n  } else {\n    accountButtonInfo = { name: 'Connect', action: loadWeb3Modal };\n  }\n\n  const display = !minimized && (\n    <span>\n      {address && (\n        <Address\n          address={address}\n          ensProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          fontSize={20}\n        />\n      )}\n      <Balance address={address} provider={localProvider} price={price} size={20} />\n      {!isContract && (\n        <Wallet\n          address={address}\n          provider={localProvider}\n          signer={userSigner}\n          ensProvider={mainnetProvider}\n          price={price}\n          color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n          size={22}\n          padding={\"0px\"}\n        />\n      )}\n    </span>\n  );\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {display}\n      {web3Modal && (\n        <Button\n          style={{ marginLeft: 8 }}\n          shape=\"round\"\n          onClick={accountButtonInfo.action}\n        >\n          {accountButtonInfo.name}\n        </Button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}