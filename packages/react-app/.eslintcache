[{"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/index.jsx":"1","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/App.jsx":"2","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/constants.js":"3","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/contracts/external_contracts.js":"4","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/index.js":"5","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/index.js":"6","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/index.js":"7","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/index.js":"8","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/ipfs.js":"9","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/Transactor.js":"10","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useLocalStorage.js":"11","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useDebounce.js":"12","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useStaticJsonRPC.js":"13","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useContractConfig.js":"14","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/Web3ModalSetup.js":"15","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Account.jsx":"16","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Address.jsx":"17","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/AddressInput.jsx":"18","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/BytesStringInput.jsx":"19","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Balance.jsx":"20","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Blockie.jsx":"21","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Events.jsx":"22","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/EtherInput.jsx":"23","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Header.jsx":"24","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Faucet.jsx":"25","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Provider.jsx":"26","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/ThemeSwitch.jsx":"27","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Timeline.jsx":"28","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Wallet.jsx":"29","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Swap.jsx":"30","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/FaucetHint.jsx":"31","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/NetworkDisplay.jsx":"32","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/GasGauge.jsx":"33","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/TokenBalance.jsx":"34","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Ramp.jsx":"35","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/L2Bridge.jsx":"36","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/NetworkSwitch.jsx":"37","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/MultiAddressInput.jsx":"38","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/TokenSelect.jsx":"39","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Home.jsx":"40","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Hints.jsx":"41","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Subgraph.jsx":"42","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/ExampleUI.jsx":"43","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/loadAppContracts.js":"44","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/index.jsx":"45","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/FunctionForm.jsx":"46","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/DisplayVariable.jsx":"47","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/utils.jsx":"48"},{"size":973,"mtime":1667950531688,"results":"49","hashOfConfig":"50"},{"size":16058,"mtime":1668017831279,"results":"51","hashOfConfig":"50"},{"size":6010,"mtime":1667950531684,"results":"52","hashOfConfig":"50"},{"size":13704,"mtime":1667950505643,"results":"53","hashOfConfig":"50"},{"size":1302,"mtime":1667950531683,"results":"54","hashOfConfig":"50"},{"size":148,"mtime":1667950531685,"results":"55","hashOfConfig":"50"},{"size":223,"mtime":1667950531686,"results":"56","hashOfConfig":"50"},{"size":188,"mtime":1667950531689,"results":"57","hashOfConfig":"50"},{"size":533,"mtime":1667950531686,"results":"58","hashOfConfig":"50"},{"size":5310,"mtime":1667950505648,"results":"59","hashOfConfig":"50"},{"size":2138,"mtime":1667950531687,"results":"60","hashOfConfig":"50"},{"size":374,"mtime":1667950531687,"results":"61","hashOfConfig":"50"},{"size":773,"mtime":1667950531687,"results":"62","hashOfConfig":"50"},{"size":417,"mtime":1667950505650,"results":"63","hashOfConfig":"50"},{"size":3001,"mtime":1667950531685,"results":"64","hashOfConfig":"50"},{"size":2956,"mtime":1667950531675,"results":"65","hashOfConfig":"50"},{"size":3341,"mtime":1667950531675,"results":"66","hashOfConfig":"50"},{"size":4192,"mtime":1667950531675,"results":"67","hashOfConfig":"50"},{"size":2895,"mtime":1667950531676,"results":"68","hashOfConfig":"50"},{"size":1738,"mtime":1667950531675,"results":"69","hashOfConfig":"50"},{"size":414,"mtime":1667950505639,"results":"70","hashOfConfig":"50"},{"size":1183,"mtime":1667950531677,"results":"71","hashOfConfig":"50"},{"size":2727,"mtime":1667950531677,"results":"72","hashOfConfig":"50"},{"size":878,"mtime":1667950531678,"results":"73","hashOfConfig":"50"},{"size":2920,"mtime":1667950531678,"results":"74","hashOfConfig":"50"},{"size":2420,"mtime":1667950531680,"results":"75","hashOfConfig":"50"},{"size":889,"mtime":1667950531682,"results":"76","hashOfConfig":"50"},{"size":4146,"mtime":1667950531682,"results":"77","hashOfConfig":"50"},{"size":9358,"mtime":1667950531683,"results":"78","hashOfConfig":"50"},{"size":23511,"mtime":1667950531681,"results":"79","hashOfConfig":"50"},{"size":1327,"mtime":1667950531678,"results":"80","hashOfConfig":"50"},{"size":3613,"mtime":1667950531679,"results":"81","hashOfConfig":"50"},{"size":758,"mtime":1667950531678,"results":"82","hashOfConfig":"50"},{"size":1175,"mtime":1667950505642,"results":"83","hashOfConfig":"50"},{"size":3921,"mtime":1667950531680,"results":"84","hashOfConfig":"50"},{"size":13151,"mtime":1667950531679,"results":"85","hashOfConfig":"50"},{"size":775,"mtime":1667950531679,"results":"86","hashOfConfig":"50"},{"size":4282,"mtime":1667950531679,"results":"87","hashOfConfig":"50"},{"size":4631,"mtime":1667950531682,"results":"88","hashOfConfig":"50"},{"size":13892,"mtime":1667950531689,"results":"89","hashOfConfig":"50"},{"size":9082,"mtime":1667950531688,"results":"90","hashOfConfig":"50"},{"size":5857,"mtime":1667950531689,"results":"91","hashOfConfig":"50"},{"size":7534,"mtime":1667950531688,"results":"92","hashOfConfig":"50"},{"size":402,"mtime":1667950505648,"results":"93","hashOfConfig":"50"},{"size":4197,"mtime":1667950531677,"results":"94","hashOfConfig":"50"},{"size":8146,"mtime":1667950531676,"results":"95","hashOfConfig":"50"},{"size":1268,"mtime":1667950531676,"results":"96","hashOfConfig":"50"},{"size":1200,"mtime":1667950531677,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pt9jzk",{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":4,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":56,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/index.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/App.jsx",["198","199","200","201","202","203","204","205","206"],"import { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Subgraph } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst initialNetwork = NETWORKS.goerli; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = false;\n\nconst web3Modal = Web3ModalSetup();\n\n// 🛰 providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // 🔭 block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n  // 🛰 providers\n  if (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  // 📟 Listen for broadcast events\n  const DepositEvents = useEventListener(readContracts, \"MetaMultiSigWallet\", \"Deposit\", localProvider, 1);\n  const ExecuteTransactionEvents = useEventListener(readContracts, \"MetaMultiSigWallet\", \"ExecuteTransaction\", localProvider, 1);\n  const OwnerEvents = useEventListener(readContracts, \"MetaMultiSigWallet\", \"Owner\", localProvider, 1);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n    localChainId,\n    myMainnetDAIBalance,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header>\n        {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n        <div style={{ position: \"relative\", display: \"flex\", flexDirection: \"column\" }}>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            {USE_NETWORK_SELECTOR && (\n              <div style={{ marginRight: 20 }}>\n                <NetworkSwitch\n                  networkOptions={networkOptions}\n                  selectedNetwork={selectedNetwork}\n                  setSelectedNetwork={setSelectedNetwork}\n                />\n              </div>\n            )}\n            <Account\n              useBurner={USE_BURNER_WALLET}\n              address={address}\n              localProvider={localProvider}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              price={price}\n              web3Modal={web3Modal}\n              loadWeb3Modal={loadWeb3Modal}\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\n              blockExplorer={blockExplorer}\n            />\n          </div>\n        </div>\n      </Header>\n      {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n        <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n      )}\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n        logoutOfWeb3Modal={logoutOfWeb3Modal}\n        USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n      />\n      <Menu style={{ textAlign: \"center\", marginTop: 20 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">App Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/debug\">\n          <Link to=\"/debug\">Debug Contracts</Link>\n        </Menu.Item>\n        {/*<Menu.Item key=\"/hints\">\n          <Link to=\"/hints\">Hints</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/exampleui\">\n          <Link to=\"/exampleui\">ExampleUI</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/mainnetdai\">\n          <Link to=\"/mainnetdai\">Mainnet DAI</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/subgraph\">\n          <Link to=\"/subgraph\">Subgraph</Link>\n        </Menu.Item>*/}\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          <Home\n            yourLocalBalance={yourLocalBalance}\n            readContracts={readContracts}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n            price={price}\n            DepositEvents={DepositEvents}\n            ExecuteTransactionEvents={ExecuteTransactionEvents}\n            OwnerEvents={OwnerEvents}\n            blockExplorer={blockExplorer}\n            localProvider={localProvider}\n            contractConfig={contractConfig}\n            chainId={localChainId}\n            userProviderAndSigner={userProviderAndSigner}\n\n          />\n        </Route>\n        <Route exact path=\"/debug\">\n          {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n          <Contract\n            name=\"MetaMultiSigWallet\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n\n          />\n        </Route>{/*}\n        <Route path=\"/hints\">\n          <Hints\n            address={address}\n            yourLocalBalance={yourLocalBalance}\n            mainnetProvider={mainnetProvider}\n            price={price}\n          />\n        </Route>\n        <Route path=\"/exampleui\">\n          <ExampleUI\n            address={address}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            localProvider={localProvider}\n            yourLocalBalance={yourLocalBalance}\n            price={price}\n            tx={tx}\n            writeContracts={writeContracts}\n            readContracts={readContracts}\n            purpose={purpose}\n          />\n        </Route>\n        <Route path=\"/mainnetdai\">\n          <Contract\n            name=\"DAI\"\n            customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n            signer={userSigner}\n            provider={mainnetProvider}\n            address={address}\n            blockExplorer=\"https://etherscan.io/\"\n            contractConfig={contractConfig}\n            chainId={1}\n          />\n          \n            <Contract\n              name=\"UNI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.UNI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer=\"https://etherscan.io/\"\n            />\n            \n        </Route>\n        <Route path=\"/subgraph\">\n          <Subgraph\n            subgraphUri={props.subgraphUri}\n            tx={tx}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n          />\n        </Route>*/}\n      </Switch>\n\n      <ThemeSwitch />\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/constants.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/contracts/external_contracts.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/index.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/index.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/index.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/index.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/ipfs.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/Transactor.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useLocalStorage.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useDebounce.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useStaticJsonRPC.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/hooks/useContractConfig.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/Web3ModalSetup.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Account.jsx",["207","208","209","210"],"import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isContract,\n}) {\n  const { currentTheme } = useThemeSwitcher();\n\n  let accountButtonInfo;\n  if (web3Modal?.cachedProvider) {\n    accountButtonInfo = { name: 'Logout', action: logoutOfWeb3Modal };\n  } else {\n    accountButtonInfo = { name: 'Connect', action: loadWeb3Modal };\n  }\n\n  const display = !minimized && (\n    <span>\n      {address && (\n        <Address\n          address={address}\n          ensProvider={mainnetProvider}\n          blockExplorer={blockExplorer}\n          fontSize={20}\n        />\n      )}\n      <Balance address={address} provider={localProvider} price={price} size={20} />\n      {!isContract && (\n        <Wallet\n          address={address}\n          provider={localProvider}\n          signer={userSigner}\n          ensProvider={mainnetProvider}\n          price={price}\n          color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n          size={22}\n          padding={\"0px\"}\n        />\n      )}\n    </span>\n  );\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {display}\n      {web3Modal && (\n        <Button\n          style={{ marginLeft: 8 }}\n          shape=\"round\"\n          onClick={accountButtonInfo.action}\n        >\n          {accountButtonInfo.name}\n        </Button>\n      )}\n    </div>\n  );\n}\n","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Address.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/AddressInput.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/BytesStringInput.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Balance.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Blockie.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Events.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/EtherInput.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Header.jsx",["211","212","213"],"import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Title, Text } = Typography;\n\n// displays a page header\n\nexport default function Header({ link, title, subTitle, ...props }) {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"1.2rem\" }}>\n      <div style={{ display: \"flex\",  flexDirection: \"column\", flex: 1, alignItems: \"start\" }}>\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Title level={4} style={{ margin: \"0 0.5rem 0 0\" }}>{title}</Title>\n        </a>\n        <Text type=\"secondary\" style={{ textAlign: \"left\" }}>{subTitle}</Text>\n      </div>\n      {props.children}\n    </div>\n  );\n}\n\nHeader.defaultProps = {\n  link: \"https://github.com/austintgriffith/scaffold-eth\",\n  title: \"🏗 scaffold-eth\",\n  subTitle: \"forkable Ethereum dev stack focused on fast product iteration\",\n};\n","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Faucet.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Provider.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/ThemeSwitch.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Timeline.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Wallet.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Swap.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/FaucetHint.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/NetworkDisplay.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/GasGauge.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/TokenBalance.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Ramp.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/L2Bridge.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/NetworkSwitch.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/MultiAddressInput.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/TokenSelect.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Home.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import { useContractReader, useContractLoader, useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport { Input, Button, Spin, List} from \"antd\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AddressInput, EtherInput, Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\nfunction Home({\n  yourLocalBalance,\n  readContracts,\n  mainnetProvider,\n  price, DepositEvents,\n  ExecuteTransactionEvents,\n  OwnerEvents,\n  blockExplorer,\n  localProvider,\n  contractConfig,\n  chainId,\n  userProviderAndSigner\n}) {\n\n\n\n  //State variables\n  const [customNonce, setCustomNonce] = useState();\n\n  //Hash calculator\n  const [toAddress, setToAddress] = useState();\n  const [value, setValue] = useState();\n  const [data, setData] = useState(\"0x\");\n  const [txHash, setTxHash] = useState(\"0x\");\n\n\n  //Calldata calculator\n  const [callDataFunctionString, setCallDataFunctionString] = useState(\"\");\n  const [encodedCalldataOutput, setEncodedCalldataOutput] = useState(\"0x\");\n\n  //Hash signer\n  const [txHashSignerInput, setTxHashSignerInput] = useState(\"\");\n  const [outputSignature, setOutputSignature] = useState(\"0x\");\n\n\n  // you can also use hooks locally in your component of choice\n  // in this case, let's keep track of 'nonce' variable from our contract\n  const nonce = useContractReader(readContracts, \"MetaMultiSigWallet\", \"nonce\");\n  const signaturesRequired = useContractReader(readContracts, \"MetaMultiSigWallet\", \"signaturesRequired\");\n  const contracts = useContractLoader(localProvider, contractConfig, chainId);\n  const multiSigAddress = contracts.MetaMultiSigWallet ? contracts.MetaMultiSigWallet.address : \"\";\n  const userAddress = useUserAddress(userProviderAndSigner);\n\n  //TX Executer\n  const [executerToAddress, setExecuterToAddress] = useState();\n  const [executerValue, setExecuterValue] = useState();\n  const [executerData, setExecuterData] = useState(\"0x\");\n  const [executerSignaturesArray, setExecuterSignaturesArray] = useState([]);\n \n  \n\n\n\n  return (\n    <div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Chest info</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h2 style={{ marginTop: 9 }}> Contract Address: &nbsp;</h2>\n          <Address\n            address={multiSigAddress}\n            ensProvider={localProvider}\n            blockExplorer={blockExplorer}\n            fontSize={25}\n          />\n        </div>\n        <div style={{ marginTop: 32, dislpay: \"flex\", justifyContent: \"center\" }}>\n          <h2 style={{ marginTop: 32 }}>Signatures Required: {signaturesRequired ? signaturesRequired.toNumber() : <Spin></Spin>}</h2>\n          <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n            <h2 style={{ marginTop: 9 }}> Balance:</h2>\n            {contracts.MetaMultiSigWallet ? <Balance\n              address={multiSigAddress}\n              provider={localProvider}\n              price={price}\n            /> : <Spin style={{ marginTop: 9 }}></Spin>}\n          </div>\n          <h2 style={{ marginTop: 32 }}> Owners List</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={OwnerEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"owner_\" + item.args.owner}>\n                  <Address \n                    address={item.args.owner}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    {item.args.added ? \"👍\" : \"👎\"}\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Funding events</h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32 }}\n            bordered\n            dataSource={DepositEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>From:</h3>\n                  <Address\n                    address={item.args.sender}\n                    ensProvider={localProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.amount}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n          <h2 style={{ marginTop: 32 }}> Successful executed transactions log </h2>\n          <List\n            style={{ maxWidth: 600, margin: \"auto\", marginTop: 32, marginBottom: 32 }}\n            bordered\n            dataSource={ExecuteTransactionEvents}\n            renderItem={(item) => {\n              return (\n                <List.Item key={\"sender_\" + item.args.sender}>\n                  <h3>To:</h3>\n                  <Address\n                    address={item.args.to}\n                    ensProvider={mainnetProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={32}\n                  />\n                  <div style={{ padding: 16 }}>\n                    amount: <Balance\n                      balance={item.args.value}\n                      price={price}\n                    />\n                  </div>\n                </List.Item>\n              )\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>TX Hash calculator</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={setCustomNonce}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={toAddress}\n              onChange={setToAddress}\n            />\n            <EtherInput\n              price={price}\n              value={value}\n              onChange={_value => {\n                setValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata 0x...\"\n              value={data}\n              onChange={e => {\n                setData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let newHash = await readContracts.MetaMultiSigWallet.getTransactionHash(nonce, toAddress, parseEther(\"\" + parseFloat(value).toFixed(12)), data);\n            setTxHash(newHash);\n          }}\n        >\n          Calculate Hash\n        </Button>\n        <h2 style={{ marginTop: 32 }}>{txHash}</h2>\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Calldata calculator</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <h3 style={{ margin: \"auto\" }}>Function signature: &nbsp; &nbsp;</h3>\n          <Input style={{ height: 30, width: 800 }}\n            placeholder=\"i.e addSigner(address 0x50Fc27c707c0f83447939532A8d9218417a21321, uint256 2)\"\n            value={callDataFunctionString}\n            onChange={e => {\n              setCallDataFunctionString(e.target.value);\n            }}\n          />\n\n\n\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={() => {\n            //create interface object from input\n            callDataFunctionString.trim();\n            let temp = \"function \".concat(callDataFunctionString);\n            let ABI = [temp];\n            let iface = new ethers.utils.Interface(ABI);\n\n            //extract funcnamestring and parameters value\n            let funcname = callDataFunctionString.slice(0, callDataFunctionString.indexOf(\"(\"));\n            let parametersObjectsIterator = iface.getFunction(funcname).inputs.values();\n            let parameters = [];\n            for (const elem of parametersObjectsIterator) {\n              parameters.push(elem.name.toString());\n            }\n\n            setEncodedCalldataOutput(iface.encodeFunctionData(funcname, parameters));\n\n          }}\n        >\n          Calculate Calldata\n        </Button>\n        <h1 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{encodedCalldataOutput}</h1>\n\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        <h1>Tx Hash signer</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32 }}>\n          <div>\n            <h3 style={{ marginTop: 4, textAlign: \"left\" }}>Hash to sign: &nbsp;</h3>\n          </div>\n          <div>\n            <Input style={{ width: 800 }}\n              placeholder=\"TX hash 0x...\"\n              value={txHashSignerInput}\n              onChange={e => {\n                setTxHashSignerInput(e.target.value);\n              }}\n\n            />\n          </div>\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            let signature = await userProviderAndSigner.signer.signMessage(ethers.utils.arrayify(txHashSignerInput));\n            setOutputSignature(signature);\n          }}\n        >\n          Sign\n        </Button>\n        <h2 style={{ marginTop: 32, fontSize: \"0.7rem\" }}>{outputSignature}</h2>\n\n      </div>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64, marginBottom: 100 }}>\n        <h1>Execute Transaction</h1>\n        <div style={{ marginTop: 32 }}>\n          <h2 style={{ display: \"inline-block\" }}>Actual nonce: &nbsp;</h2>\n          <div style={{ width: \"3rem\", display: \"inline-block\" }}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={(_value) =>{\n                setCustomNonce(_value)\n              }}\n            />\n          </div>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 32, marginBottom: 64 }}>\n          <div>\n            <h3 style={{ textAlign: \"left\" }}>Destination address: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Value: &nbsp;</h3>\n            <h3 style={{ textAlign: \"left\" }}>Calldata: &nbsp;</h3>\n          </div>\n          <div>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"Enter address\"\n              value={executerToAddress}\n              onChange={_address =>{ \n                setExecuterToAddress(_address);\n                }   \n              }\n            />\n            <EtherInput\n              price={price}\n              value={executerValue}\n              onChange={_value => {\n                setExecuterValue(_value);\n              }}\n            />\n            <Input\n              placeholder=\"calldata\"\n              value={executerData}\n              onChange={e => {\n                setExecuterData(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        <h2>Signatures</h2>\n        <div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {await setExecuterSignaturesArray(new Array(signaturesRequired))}}\n        >Render signatures input</Button>\n        </div>\n        <div style={{ marginTop: 32 }}>\n        {\n        executerSignaturesArray.map((signature, signatureIndex) => (\n          <Input\n          placeholder={\"signature n\" + signatureIndex}\n          value = {signature}\n          onChange={e => {\n            setExecuterSignaturesArray([\n              ...executerSignaturesArray.slice(0,signatureIndex),\n              e.target.value,\n              ...executerSignaturesArray.slice(signatureIndex + 1,executerSignaturesArray.lenght)\n            ]);\n          }}\n        />\n        ))}\n        </div>\n        <Button\n          style={{ marginTop: 32 }}\n          onClick={async () => {\n            //get contract instance connected to wallet provider\n            const connectedContract = readContracts.MetaMultiSigWallet.connect(userProviderAndSigner.signer);\n            //execute transaction            \n            await connectedContract.executeTransaction(executerToAddress, parseEther(\"\" + parseFloat(executerValue).toFixed(12)), executerData, executerSignaturesArray);\n          }}\n        >\n          Execute TX\n        </Button>\n      </div>\n\n\n    </div >\n  );\n}\n\nexport default Home;\n","/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Hints.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/Subgraph.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/views/ExampleUI.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/helpers/loadAppContracts.js",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/index.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/FunctionForm.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/DisplayVariable.jsx",[],"/Users/untitled/meta-multi-sig-v2/packages/react-app/src/components/Contract/utils.jsx",[],{"ruleId":"274","severity":1,"message":"275","line":32,"column":16,"nodeType":"276","messageId":"277","endLine":32,"endColumn":25},{"ruleId":"274","severity":1,"message":"278","line":32,"column":27,"nodeType":"276","messageId":"277","endLine":32,"endColumn":32},{"ruleId":"274","severity":1,"message":"279","line":32,"column":34,"nodeType":"276","messageId":"277","endLine":32,"endColumn":42},{"ruleId":"274","severity":1,"message":"280","line":137,"column":9,"nodeType":"276","messageId":"277","endLine":137,"endColumn":11},{"ruleId":"274","severity":1,"message":"281","line":171,"column":9,"nodeType":"276","messageId":"277","endLine":171,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":175,"column":53,"nodeType":null,"messageId":"284","endLine":175,"endColumn":128,"fix":"285"},{"ruleId":"282","severity":1,"message":"286","line":332,"column":1,"nodeType":null,"messageId":"287","endLine":333,"endColumn":1,"fix":"288"},{"ruleId":"282","severity":1,"message":"286","line":350,"column":1,"nodeType":null,"messageId":"287","endLine":351,"endColumn":1,"fix":"289"},{"ruleId":"282","severity":1,"message":"290","line":352,"column":17,"nodeType":null,"messageId":"291","endLine":352,"endColumn":17,"fix":"292"},{"ruleId":"282","severity":1,"message":"293","line":61,"column":33,"nodeType":null,"messageId":"284","endLine":61,"endColumn":41,"fix":"294"},{"ruleId":"282","severity":1,"message":"295","line":63,"column":33,"nodeType":null,"messageId":"284","endLine":63,"endColumn":42,"fix":"296"},{"ruleId":"282","severity":1,"message":"297","line":69,"column":17,"nodeType":null,"messageId":"284","endLine":74,"endColumn":8,"fix":"298"},{"ruleId":"282","severity":1,"message":"299","line":96,"column":16,"nodeType":null,"messageId":"284","endLine":100,"endColumn":9,"fix":"300"},{"ruleId":"282","severity":1,"message":"301","line":11,"column":38,"nodeType":null,"messageId":"287","endLine":11,"endColumn":39,"fix":"302"},{"ruleId":"282","severity":1,"message":"303","line":13,"column":63,"nodeType":null,"messageId":"284","endLine":13,"endColumn":70,"fix":"304"},{"ruleId":"282","severity":1,"message":"305","line":15,"column":62,"nodeType":null,"messageId":"284","endLine":15,"endColumn":72,"fix":"306"},{"ruleId":"282","severity":1,"message":"307","line":3,"column":35,"nodeType":null,"messageId":"291","endLine":3,"endColumn":35,"fix":"308"},{"ruleId":"274","severity":1,"message":"309","line":4,"column":27,"nodeType":"276","messageId":"277","endLine":4,"endColumn":33},{"ruleId":"274","severity":1,"message":"310","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":14},{"ruleId":"274","severity":1,"message":"311","line":7,"column":22,"nodeType":"276","messageId":"277","endLine":7,"endColumn":33},{"ruleId":"282","severity":1,"message":"312","line":19,"column":9,"nodeType":null,"messageId":"291","endLine":19,"endColumn":9,"fix":"313"},{"ruleId":"282","severity":1,"message":"314","line":26,"column":24,"nodeType":null,"messageId":"291","endLine":26,"endColumn":24,"fix":"315"},{"ruleId":"282","severity":1,"message":"316","line":27,"column":5,"nodeType":null,"messageId":"287","endLine":30,"endColumn":1,"fix":"317"},{"ruleId":"282","severity":1,"message":"286","line":40,"column":1,"nodeType":null,"messageId":"287","endLine":41,"endColumn":1,"fix":"318"},{"ruleId":"282","severity":1,"message":"286","line":47,"column":64,"nodeType":null,"messageId":"287","endLine":48,"endColumn":1,"fix":"319"},{"ruleId":"274","severity":1,"message":"320","line":56,"column":9,"nodeType":"276","messageId":"277","endLine":56,"endColumn":20},{"ruleId":"282","severity":1,"message":"321","line":63,"column":1,"nodeType":null,"messageId":"287","endLine":67,"endColumn":1,"fix":"322"},{"ruleId":"282","severity":1,"message":"323","line":74,"column":19,"nodeType":null,"messageId":"284","endLine":79,"endColumn":10,"fix":"324"},{"ruleId":"282","severity":1,"message":"325","line":82,"column":41,"nodeType":null,"messageId":"284","endLine":82,"endColumn":130,"fix":"326"},{"ruleId":"282","severity":1,"message":"327","line":85,"column":45,"nodeType":null,"messageId":"284","endLine":85,"endColumn":53,"fix":"328"},{"ruleId":"282","severity":1,"message":"329","line":86,"column":15,"nodeType":null,"messageId":"284","endLine":87,"endColumn":39,"fix":"330"},{"ruleId":"282","severity":1,"message":"331","line":88,"column":13,"nodeType":null,"messageId":"284","endLine":88,"endColumn":28,"fix":"332"},{"ruleId":"282","severity":1,"message":"333","line":89,"column":13,"nodeType":null,"messageId":"284","endLine":89,"endColumn":56,"fix":"334"},{"ruleId":"282","severity":1,"message":"335","line":96,"column":25,"nodeType":null,"messageId":"284","endLine":96,"endColumn":31,"fix":"336"},{"ruleId":"282","severity":1,"message":"301","line":99,"column":27,"nodeType":null,"messageId":"287","endLine":99,"endColumn":28,"fix":"337"},{"ruleId":"282","severity":1,"message":"338","line":105,"column":48,"nodeType":null,"messageId":"284","endLine":107,"endColumn":19,"fix":"339"},{"ruleId":"282","severity":1,"message":"340","line":109,"column":16,"nodeType":null,"messageId":"291","endLine":109,"endColumn":16,"fix":"341"},{"ruleId":"282","severity":1,"message":"335","line":117,"column":25,"nodeType":null,"messageId":"284","endLine":117,"endColumn":31,"fix":"342"},{"ruleId":"282","severity":1,"message":"343","line":128,"column":37,"nodeType":null,"messageId":"284","endLine":131,"endColumn":20,"fix":"344"},{"ruleId":"282","severity":1,"message":"340","line":134,"column":16,"nodeType":null,"messageId":"291","endLine":134,"endColumn":16,"fix":"345"},{"ruleId":"282","severity":1,"message":"335","line":142,"column":25,"nodeType":null,"messageId":"284","endLine":142,"endColumn":31,"fix":"346"},{"ruleId":"282","severity":1,"message":"347","line":153,"column":37,"nodeType":null,"messageId":"284","endLine":156,"endColumn":20,"fix":"348"},{"ruleId":"282","severity":1,"message":"340","line":159,"column":16,"nodeType":null,"messageId":"291","endLine":159,"endColumn":16,"fix":"349"},{"ruleId":"282","severity":1,"message":"350","line":211,"column":85,"nodeType":null,"messageId":"284","endLine":211,"endColumn":155,"fix":"351"},{"ruleId":"282","severity":1,"message":"352","line":223,"column":17,"nodeType":null,"messageId":"291","endLine":223,"endColumn":17,"fix":"353"},{"ruleId":"282","severity":1,"message":"316","line":229,"column":13,"nodeType":null,"messageId":"287","endLine":232,"endColumn":1,"fix":"354"},{"ruleId":"282","severity":1,"message":"286","line":251,"column":86,"nodeType":null,"messageId":"287","endLine":252,"endColumn":1,"fix":"355"},{"ruleId":"282","severity":1,"message":"356","line":258,"column":1,"nodeType":null,"messageId":"287","endLine":260,"endColumn":1,"fix":"357"},{"ruleId":"282","severity":1,"message":"358","line":268,"column":19,"nodeType":null,"messageId":"291","endLine":268,"endColumn":19,"fix":"359"},{"ruleId":"282","severity":1,"message":"286","line":273,"column":17,"nodeType":null,"messageId":"287","endLine":274,"endColumn":1,"fix":"360"},{"ruleId":"282","severity":1,"message":"286","line":287,"column":81,"nodeType":null,"messageId":"287","endLine":288,"endColumn":1,"fix":"361"},{"ruleId":"282","severity":1,"message":"362","line":290,"column":11,"nodeType":null,"messageId":"284","endLine":290,"endColumn":127,"fix":"363"},{"ruleId":"282","severity":1,"message":"364","line":300,"column":25,"nodeType":null,"messageId":"284","endLine":300,"endColumn":36,"fix":"365"},{"ruleId":"282","severity":1,"message":"340","line":301,"column":39,"nodeType":null,"messageId":"291","endLine":301,"endColumn":39,"fix":"366"},{"ruleId":"282","severity":1,"message":"367","line":318,"column":36,"nodeType":null,"messageId":"284","endLine":318,"endColumn":38,"fix":"368"},{"ruleId":"282","severity":1,"message":"369","line":320,"column":15,"nodeType":null,"messageId":"284","endLine":321,"endColumn":15,"fix":"370"},{"ruleId":"282","severity":1,"message":"371","line":341,"column":9,"nodeType":null,"messageId":"291","endLine":341,"endColumn":9,"fix":"372"},{"ruleId":"282","severity":1,"message":"371","line":342,"column":1,"nodeType":null,"messageId":"291","endLine":342,"endColumn":1,"fix":"373"},{"ruleId":"282","severity":1,"message":"374","line":343,"column":11,"nodeType":null,"messageId":"284","endLine":343,"endColumn":96,"fix":"375"},{"ruleId":"282","severity":1,"message":"376","line":344,"column":1,"nodeType":null,"messageId":"284","endLine":344,"endColumn":33,"fix":"377"},{"ruleId":"282","severity":1,"message":"378","line":347,"column":9,"nodeType":null,"messageId":"284","endLine":348,"endColumn":9,"fix":"379"},{"ruleId":"282","severity":1,"message":"371","line":349,"column":1,"nodeType":null,"messageId":"291","endLine":349,"endColumn":1,"fix":"380"},{"ruleId":"282","severity":1,"message":"381","line":350,"column":11,"nodeType":null,"messageId":"291","endLine":350,"endColumn":11,"fix":"382"},{"ruleId":"282","severity":1,"message":"383","line":351,"column":11,"nodeType":null,"messageId":"284","endLine":351,"endColumn":19,"fix":"384"},{"ruleId":"282","severity":1,"message":"385","line":352,"column":1,"nodeType":null,"messageId":"284","endLine":352,"endColumn":11,"fix":"386"},{"ruleId":"282","severity":1,"message":"381","line":353,"column":1,"nodeType":null,"messageId":"291","endLine":353,"endColumn":1,"fix":"387"},{"ruleId":"282","severity":1,"message":"388","line":354,"column":15,"nodeType":null,"messageId":"284","endLine":354,"endColumn":50,"fix":"389"},{"ruleId":"282","severity":1,"message":"390","line":355,"column":1,"nodeType":null,"messageId":"284","endLine":355,"endColumn":15,"fix":"391"},{"ruleId":"282","severity":1,"message":"392","line":356,"column":1,"nodeType":null,"messageId":"284","endLine":356,"endColumn":98,"fix":"393"},{"ruleId":"282","severity":1,"message":"394","line":357,"column":1,"nodeType":null,"messageId":"284","endLine":357,"endColumn":13,"fix":"395"},{"ruleId":"282","severity":1,"message":"381","line":358,"column":1,"nodeType":null,"messageId":"291","endLine":358,"endColumn":1,"fix":"396"},{"ruleId":"282","severity":1,"message":"381","line":359,"column":9,"nodeType":null,"messageId":"291","endLine":359,"endColumn":9,"fix":"397"},{"ruleId":"282","severity":1,"message":"371","line":360,"column":1,"nodeType":null,"messageId":"291","endLine":360,"endColumn":1,"fix":"398"},{"ruleId":"282","severity":1,"message":"399","line":367,"column":34,"nodeType":null,"messageId":"287","endLine":367,"endColumn":46,"fix":"400"},{"ruleId":"282","severity":1,"message":"401","line":368,"column":56,"nodeType":null,"messageId":"284","endLine":368,"endColumn":168,"fix":"402"},{"ruleId":"282","severity":1,"message":"403","line":374,"column":1,"nodeType":null,"messageId":"284","endLine":376,"endColumn":11,"fix":"404"},"no-unused-vars","'ExampleUI' is defined but never used.","Identifier","unusedVar","'Hints' is defined but never used.","'Subgraph' is defined but never used.","'tx' is assigned a value but never used.","'purpose' is assigned a value but never used.","prettier/prettier","Replace `readContracts,·\"MetaMultiSigWallet\",·\"ExecuteTransaction\",·localProvider,·1` with `⏎····readContracts,⏎····\"MetaMultiSigWallet\",⏎····\"ExecuteTransaction\",⏎····localProvider,⏎····1,⏎··`","replace",{"range":"405","text":"406"},"Delete `⏎`","delete",{"range":"407","text":"408"},{"range":"409","text":"408"},"Insert `⏎········`","insert",{"range":"410","text":"411"},"Replace `'Logout'` with `\"Logout\"`",{"range":"412","text":"413"},"Replace `'Connect'` with `\"Connect\"`",{"range":"414","text":"415"},"Replace `⏎··········address={address}⏎··········ensProvider={mainnetProvider}⏎··········blockExplorer={blockExplorer}⏎··········fontSize={20}⏎·······` with `·address={address}·ensProvider={mainnetProvider}·blockExplorer={blockExplorer}·fontSize={20}`",{"range":"416","text":"417"},"Replace `⏎··········style={{·marginLeft:·8·}}⏎··········shape=\"round\"⏎··········onClick={accountButtonInfo.action}⏎········` with `·style={{·marginLeft:·8·}}·shape=\"round\"·onClick={accountButtonInfo.action}`",{"range":"418","text":"419"},"Delete `·`",{"range":"420","text":"408"},"Replace `{title}` with `⏎············{title}⏎··········`",{"range":"421","text":"422"},"Replace `{subTitle}` with `⏎··········{subTitle}⏎········`",{"range":"423","text":"424"},"Insert `·`",{"range":"425","text":"426"},"'useRef' is defined but never used.","'Link' is defined but never used.","'formatEther' is defined but never used.","Insert `⏎·`",{"range":"427","text":"428"},"Insert `,`",{"range":"429","text":"430"},"Delete `⏎⏎⏎`",{"range":"431","text":"408"},{"range":"432","text":"408"},{"range":"433","text":"408"},"'userAddress' is assigned a value but never used.","Delete `·⏎··⏎⏎⏎`",{"range":"434","text":"408"},"Replace `⏎············address={multiSigAddress}⏎············ensProvider={localProvider}⏎············blockExplorer={blockExplorer}⏎············fontSize={25}⏎·········` with `·address={multiSigAddress}·ensProvider={localProvider}·blockExplorer={blockExplorer}·fontSize={25}`",{"range":"435","text":"436"},"Replace `Signatures·Required:·{signaturesRequired·?·signaturesRequired.toNumber()·:·<Spin></Spin>}` with `⏎············Signatures·Required:·{signaturesRequired·?·signaturesRequired.toNumber()·:·<Spin></Spin>}⏎··········`",{"range":"437","text":"438"},"Replace `<Balance` with `(`",{"range":"439","text":"440"},"Replace `address={multiSigAddress}⏎··············provider={localProvider}` with `<Balance·address={multiSigAddress}·provider={localProvider}·price={price}·/>`",{"range":"441","text":"442"},"Replace `··price={price}` with `)·:·(`",{"range":"443","text":"444"},"Replace `/>·:·<Spin·style={{·marginTop:·9·}}></Spin>` with `··<Spin·style={{·marginTop:·9·}}></Spin>⏎············)`",{"range":"445","text":"446"},"Replace `(item)` with `item`",{"range":"447","text":"448"},{"range":"449","text":"408"},"Replace `⏎····················{item.args.added·?·\"👍\"·:·\"👎\"}⏎··················` with `{item.args.added·?·\"👍\"·:·\"👎\"}`",{"range":"450","text":"451"},"Insert `;`",{"range":"452","text":"453"},{"range":"454","text":"448"},"Replace `⏎······················balance={item.args.amount}⏎······················price={price}⏎···················` with `·balance={item.args.amount}·price={price}`",{"range":"455","text":"456"},{"range":"457","text":"453"},{"range":"458","text":"448"},"Replace `⏎······················balance={item.args.value}⏎······················price={price}⏎···················` with `·balance={item.args.value}·price={price}`",{"range":"459","text":"460"},{"range":"461","text":"453"},"Replace `nonce,·toAddress,·parseEther(\"\"·+·parseFloat(value).toFixed(12)),·data` with `⏎··············nonce,⏎··············toAddress,⏎··············parseEther(\"\"·+·parseFloat(value).toFixed(12)),⏎··············data,⏎············`",{"range":"462","text":"463"},"Insert `⏎···········`",{"range":"464","text":"465"},{"range":"466","text":"408"},{"range":"467","text":"408"},"Delete `⏎⏎`",{"range":"468","text":"408"},"Insert `⏎·············`",{"range":"469","text":"470"},{"range":"471","text":"408"},{"range":"472","text":"408"},"Replace `·style={{·border:·\"1px·solid·#cccccc\",·padding:·16,·width:·1000,·margin:·\"auto\",·marginTop:·64,·marginBottom:·100·}}` with `⏎········style={{⏎··········border:·\"1px·solid·#cccccc\",⏎··········padding:·16,⏎··········width:·1000,⏎··········margin:·\"auto\",⏎··········marginTop:·64,⏎··········marginBottom:·100,⏎········}}⏎······`",{"range":"473","text":"474"},"Replace `(_value)·=>` with `_value·=>·`",{"range":"475","text":"476"},{"range":"477","text":"453"},"Replace `{·` with `·{`",{"range":"478","text":"479"},"Replace `··}···⏎··············` with `}`",{"range":"480","text":"481"},"Insert `··`",{"range":"482","text":"483"},{"range":"484","text":"483"},"Replace `onClick={async·()·=>·{await·setExecuterSignaturesArray(new·Array(signaturesRequired))` with `··onClick={async·()·=>·{⏎··············await·setExecuterSignaturesArray(new·Array(signaturesRequired));⏎············`",{"range":"485","text":"486"},"Replace `········>Render·signatures·input` with `··········>⏎············Render·signatures·input⏎··········`",{"range":"487","text":"488"},"Replace `{⏎········` with `··{`",{"range":"489","text":"490"},{"range":"491","text":"483"},"Insert `····`",{"range":"492","text":"493"},"Replace `value·=·` with `····value=`",{"range":"494","text":"495"},"Replace `··········` with `··············`",{"range":"496","text":"497"},{"range":"498","text":"493"},"Replace `...executerSignaturesArray.slice(0,` with `····...executerSignaturesArray.slice(0,·`",{"range":"499","text":"500"},"Replace `··············` with `··················`",{"range":"501","text":"502"},"Replace `··············...executerSignaturesArray.slice(signatureIndex·+·1,executerSignaturesArray.lenght)` with `··················...executerSignaturesArray.slice(signatureIndex·+·1,·executerSignaturesArray.lenght),`",{"range":"503","text":"504"},"Replace `············` with `················`",{"range":"505","text":"506"},{"range":"507","text":"493"},{"range":"508","text":"493"},{"range":"509","text":"483"},"Delete `············`",{"range":"510","text":"408"},"Replace `executerToAddress,·parseEther(\"\"·+·parseFloat(executerValue).toFixed(12)),·executerData,·executerSignaturesArray` with `⏎··············executerToAddress,⏎··············parseEther(\"\"·+·parseFloat(executerValue).toFixed(12)),⏎··············executerData,⏎··············executerSignaturesArray,⏎············`",{"range":"511","text":"512"},"Replace `⏎⏎····</div·` with `····</div`",{"range":"513","text":"514"},[6445,6520],"\n    readContracts,\n    \"MetaMultiSigWallet\",\n    \"ExecuteTransaction\",\n    localProvider,\n    1,\n  ",[12189,12190],"",[12769,12770],[12799,12799],"\n        ",[1868,1876],"\"Logout\"",[1950,1959],"\"Connect\"",[2072,2212]," address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} fontSize={20}",[2760,2874]," style={{ marginLeft: 8 }} shape=\"round\" onClick={accountButtonInfo.action}",[335,336],[522,529],"\n            {title}\n          ",[612,622],"\n          {subTitle}\n        ",[149,149]," ",[820,820],"\n ",[965,965],",",[970,973],[1244,1245],[1567,1568],[2409,2416],[2746,2902]," address={multiSigAddress} ensProvider={localProvider} blockExplorer={blockExplorer} fontSize={25}",[3044,3133],"\n            Signatures Required: {signaturesRequired ? signaturesRequired.toNumber() : <Spin></Spin>}\n          ",[3324,3332],"(",[3347,3411],"<Balance address={multiSigAddress} provider={localProvider} price={price} />",[3424,3439],") : (",[3452,3495],"  <Spin style={{ marginTop: 9 }}></Spin>\n            )",[3739,3745],"item",[3861,3862],[4111,4182],"{item.args.added ? \"👍\" : \"👎\"}",[4233,4233],";",[4492,4498],[4934,5039]," balance={item.args.amount} price={price}",[5112,5112],[5423,5429],[5861,5965]," balance={item.args.value} price={price}",[6038,6038],[7827,7897],"\n              nonce,\n              toAddress,\n              parseEther(\"\" + parseFloat(value).toFixed(12)),\n              data,\n            ",[8388,8388],"\n           ",[8683,8686],[9518,9519],[9677,9679],[10069,10069],"\n             ",[10276,10277],[10707,10708],[10732,10848],"\n        style={{\n          border: \"1px solid #cccccc\",\n          padding: 16,\n          width: 1000,\n          margin: \"auto\",\n          marginTop: 64,\n          marginBottom: 100,\n        }}\n      ",[11270,11281],"_value => ",[11321,11321],[11959,11961]," {",[12024,12045],"}",[12545,12545],"  ",[12553,12553],[12599,12684],"  onClick={async () => {\n              await setExecuterSignaturesArray(new Array(signaturesRequired));\n            ",[12687,12719],"          >\n            Render signatures input\n          ",[12792,12802],"  {",[12863,12863],[12890,12890],"    ",[12945,12953],"    value=",[12965,12975],"              ",[12992,12992],[13047,13082],"    ...executerSignaturesArray.slice(0, ",[13099,13113],"                  ",[13129,13226],"                  ...executerSignaturesArray.slice(signatureIndex + 1, executerSignaturesArray.lenght),",[13227,13239],"                ",[13243,13243],[13264,13264],[13267,13267],[13587,13599],[13655,13767],"\n              executerToAddress,\n              parseEther(\"\" + parseFloat(executerValue).toFixed(12)),\n              executerData,\n              executerSignaturesArray,\n            ",[13845,13857],"    </div"]