"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SequencerInbox__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AlreadyInit",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "AlreadyValidDASKeyset",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "stored",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "received",
                type: "uint256",
            },
        ],
        name: "BadSequencerNumber",
        type: "error",
    },
    {
        inputs: [],
        name: "DataNotAuthenticated",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "dataLength",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxDataLength",
                type: "uint256",
            },
        ],
        name: "DataTooLarge",
        type: "error",
    },
    {
        inputs: [],
        name: "DelayedBackwards",
        type: "error",
    },
    {
        inputs: [],
        name: "DelayedTooFar",
        type: "error",
    },
    {
        inputs: [],
        name: "ForceIncludeBlockTooSoon",
        type: "error",
    },
    {
        inputs: [],
        name: "ForceIncludeTimeTooSoon",
        type: "error",
    },
    {
        inputs: [],
        name: "HadZeroInit",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectMessagePreimage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "NoSuchKeyset",
        type: "error",
    },
    {
        inputs: [],
        name: "NotBatchPoster",
        type: "error",
    },
    {
        inputs: [],
        name: "NotOrigin",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "NotOwner",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "messageNum",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "InboxMessageDelivered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "keysetHash",
                type: "bytes32",
            },
        ],
        name: "InvalidateKeyset",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "OwnerFunctionCalled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "batchSequenceNumber",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "SequencerBatchData",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "batchSequenceNumber",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "beforeAcc",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "afterAcc",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "delayedAcc",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "afterDelayedMessagesRead",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "minTimestamp",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "maxTimestamp",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "minBlockNumber",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "maxBlockNumber",
                        type: "uint64",
                    },
                ],
                indexed: false,
                internalType: "struct ISequencerInbox.TimeBounds",
                name: "timeBounds",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "enum ISequencerInbox.BatchDataLocation",
                name: "dataLocation",
                type: "uint8",
            },
        ],
        name: "SequencerBatchDelivered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "keysetHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "keysetBytes",
                type: "bytes",
            },
        ],
        name: "SetValidKeyset",
        type: "event",
    },
    {
        inputs: [],
        name: "DATA_AUTHENTICATED_FLAG",
        outputs: [
            {
                internalType: "bytes1",
                name: "",
                type: "bytes1",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "HEADER_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "sequenceNumber",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "afterDelayedMessagesRead",
                type: "uint256",
            },
            {
                internalType: "contract IGasRefunder",
                name: "gasRefunder",
                type: "address",
            },
        ],
        name: "addSequencerL2Batch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "sequenceNumber",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "afterDelayedMessagesRead",
                type: "uint256",
            },
            {
                internalType: "contract IGasRefunder",
                name: "gasRefunder",
                type: "address",
            },
        ],
        name: "addSequencerL2BatchFromOrigin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "batchCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "dasKeySetInfo",
        outputs: [
            {
                internalType: "bool",
                name: "isValidKeyset",
                type: "bool",
            },
            {
                internalType: "uint64",
                name: "creationBlock",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_totalDelayedMessagesRead",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "kind",
                type: "uint8",
            },
            {
                internalType: "uint64[2]",
                name: "l1BlockAndTime",
                type: "uint64[2]",
            },
            {
                internalType: "uint256",
                name: "baseFeeL1",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "messageDataHash",
                type: "bytes32",
            },
        ],
        name: "forceInclusion",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ksHash",
                type: "bytes32",
            },
        ],
        name: "getKeysetCreationBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "inboxAccs",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IBridge",
                name: "bridge_",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "delayBlocks",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "futureBlocks",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "delaySeconds",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "futureSeconds",
                        type: "uint256",
                    },
                ],
                internalType: "struct ISequencerInbox.MaxTimeVariation",
                name: "maxTimeVariation_",
                type: "tuple",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ksHash",
                type: "bytes32",
            },
        ],
        name: "invalidateKeysetHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "isBatchPoster",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ksHash",
                type: "bytes32",
            },
        ],
        name: "isValidKeysetHash",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "maxTimeVariation",
        outputs: [
            {
                internalType: "uint256",
                name: "delayBlocks",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "futureBlocks",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "delaySeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "futureSeconds",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollup",
        outputs: [
            {
                internalType: "contract IOwnable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
            {
                internalType: "bool",
                name: "isBatchPoster_",
                type: "bool",
            },
        ],
        name: "setIsBatchPoster",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "delayBlocks",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "futureBlocks",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "delaySeconds",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "futureSeconds",
                        type: "uint256",
                    },
                ],
                internalType: "struct ISequencerInbox.MaxTimeVariation",
                name: "maxTimeVariation_",
                type: "tuple",
            },
        ],
        name: "setMaxTimeVariation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "keysetBytes",
                type: "bytes",
            },
        ],
        name: "setValidKeyset",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalDelayedMessagesRead",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a06040523060805234801561001457600080fd5b50608051611d4c61003060003960006103e80152611d4c6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637fa3a40e116100ad578063d9dd67ab11610071578063d9dd67ab146102ca578063e5a358c8146102dd578063e78cea9214610301578063ebea461d14610314578063f19815781461034a57600080fd5b80637fa3a40e1461025d5780638442086014610266578063b31761f814610279578063cb23bcb51461028c578063d1ce8da8146102b757600080fd5b806361a93f8f116100f457806361a93f8f146101af5780636e7df3e7146101c25780636f12b0c9146101d5578063715ea34b146101e857806371c3e6fe1461023a57600080fd5b806306f13056146101315780631637be481461014c5780631f7a92b21461017f578063258f04951461019457806327957a49146101a7575b600080fd5b61013961035d565b6040519081526020015b60405180910390f35b61016f61015a366004611764565b60009081526008602052604090205460ff1690565b6040519015158152602001610143565b61019261018d366004611795565b6103dd565b005b6101396101a2366004611764565b610595565b610139602881565b6101926101bd36600461181e565b6105fe565b6101926101d0366004611896565b6107dd565b6101926101e336600461181e565b6108e3565b61021b6101f6366004611764565b60086020526000908152604090205460ff81169061010090046001600160401b031682565b6040805192151583526001600160401b03909116602083015201610143565b61016f6102483660046118cf565b60036020526000908152604090205460ff1681565b61013960005481565b610192610274366004611764565b6109fd565b6101926102873660046118f3565b610b50565b60025461029f906001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6101926102c5366004611966565b610c50565b6101396102d8366004611764565b610e21565b6102e8600160fe1b81565b6040516001600160f81b03199091168152602001610143565b60015461029f906001600160a01b031681565b60045460055460065460075461032a9392919084565b604080519485526020850193909352918301526060820152608001610143565b6101926103583660046119a7565b610ea4565b600154604080516221048360e21b815290516000926001600160a01b0316916284120c916004808301926020929190829003018186803b1580156103a057600080fd5b505afa1580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190611a17565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104705760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b6001546001600160a01b03161561049a57604051633bcd329760e21b815260040160405180910390fd5b6001600160a01b0382166104c157604051631ad0f74360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384169081179091556040805163cb23bcb560e01b8152905163cb23bcb591600480820192602092909190829003018186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d9190611a30565b600280546001600160a01b0319166001600160a01b03929092169190911790558035600490815560208201356005556040820135600655606082013560075581905b50505050565b600081815260086020908152604080832081518083019092525460ff81161515825261010090046001600160401b0316918101829052906105eb5760405162f20c5d60e01b815260048101849052602401610467565b602001516001600160401b031692915050565b8060005a3360009081526003602052604090205490915060ff1615801561063057506002546001600160a01b03163314155b1561064e57604051632dd9fc9760e01b815260040160405180910390fd5b60008061065c8888886111d7565b91509150600080600080610672868b600061134a565b93509350935093508c84146106a45760405163ac7411c960e01b815260048101859052602481018e9052604401610467565b80838e600080516020611cd7833981519152858e8a60016040516106cb9493929190611a4d565b60405180910390a48c7ffe325ca1efe4c5c1062c981c3ee74b781debe4ea9440306a96d2a55759c66c208d8d604051610705929190611ac1565b60405180910390a2505050506001600160a01b0384161591506107d49050576000333214156107315750365b826001600160a01b031663e3db8a49335a61074c9086611b06565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401602060405180830381600087803b15801561079957600080fd5b505af11580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190611b1d565b50505b50505050505050565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561082b57600080fd5b505afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611a30565b6001600160a01b0316336001600160a01b0316146108a557600254604051631194af8760e11b81526104679133916001600160a01b0390911690600401611b3a565b6001600160a01b038216600090815260036020526040808220805460ff191684151517905551600191600080516020611cf783398151915291a25050565b8060005a90503332146109095760405163feb3d07160e01b815260040160405180910390fd5b3360009081526003602052604090205460ff1661093957604051632dd9fc9760e01b815260040160405180910390fd5b6000806109478888886111d7565b9092509050600080808061095c868b8d61134a565b93509350935093508c841461098e5760405163ac7411c960e01b815260048101859052602481018e9052604401610467565b80838e600080516020611cd7833981519152856000548a60006040516109b79493929190611a4d565b60405180910390a4505050506001600160a01b0384161591506107d4905057600033321415610731575036826001600160a01b031663e3db8a49335a61074c9086611b06565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a4b57600080fd5b505afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190611a30565b6001600160a01b0316336001600160a01b031614610ac557600254604051631194af8760e11b81526104679133916001600160a01b0390911690600401611b3a565b60008181526008602052604090205460ff16610af65760405162f20c5d60e01b815260048101829052602401610467565b600081815260086020526040808220805460ff191690555182917f5cb4218b272fd214168ac43e90fb4d05d6c36f0b17ffb4c2dd07c234d744eb2a91a2604051600390600080516020611cf783398151915290600090a250565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b9e57600080fd5b505afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190611a30565b6001600160a01b0316336001600160a01b031614610c1857600254604051631194af8760e11b81526104679133916001600160a01b0390911690600401611b3a565b80516004556020810151600555604080820151600655606082015160075551600090600080516020611cf7833981519152908290a250565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9e57600080fd5b505afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190611a30565b6001600160a01b0316336001600160a01b031614610d1857600254604051631194af8760e11b81526104679133916001600160a01b0390911690600401611b3a565b60008282604051610d2a929190611b54565b604080519182900390912060008181526008602052919091205490915060ff1615610d6b57604051637d17eeed60e11b815260048101829052602401610467565b60408051808201825260018152436001600160401b0390811660208084019182526000868152600890915284902092518354915168ffffffffffffffffff1990921690151568ffffffffffffffff0019161761010091909216021790555181907fabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef65572290610dfa9086908690611ac1565b60405180910390a2604051600290600080516020611cf783398151915290600090a2505050565b6001546040516316bf557960e01b8152600481018390526000916001600160a01b0316906316bf55799060240160206040518083038186803b158015610e6657600080fd5b505afa158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190611a17565b92915050565b6000548611610ec657604051633eb9f37d60e11b815260040160405180910390fd5b6000610f768684610eda6020890189611b7a565b610eea60408a0160208b01611b7a565b610ef560018d611b06565b6040805160f89690961b6001600160f81b03191660208088019190915260609590951b6001600160601b031916602187015260c093841b6001600160c01b031990811660358801529290931b909116603d85015260458401526065830188905260858084018790528151808503909101815260a59093019052815191012090565b6004549091504390610f8b6020880188611b7a565b6001600160401b0316610f9e9190611ba3565b10610fbc5760405163ad3515d960e01b815260040160405180910390fd5b6006544290610fd16040880160208901611b7a565b6001600160401b0316610fe49190611ba3565b106110025760405163c76d17e560e01b815260040160405180910390fd5b6000600188111561109a576001546001600160a01b031663d5719dc261102960028b611b06565b6040518263ffffffff1660e01b815260040161104791815260200190565b60206040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190611a17565b90505b60408051602080820184905281830185905282518083038401815260609092019092528051910120600180546001600160a01b03169063d5719dc2906110e0908c611b06565b6040518263ffffffff1660e01b81526004016110fe91815260200190565b60206040518083038186803b15801561111657600080fd5b505afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e9190611a17565b1461116c576040516313947fd760e01b815260040160405180910390fd5b6000806111788a6115d6565b9150915060008060008061118e868f600061134a565b9350935093509350808385600080516020611cd7833981519152856000548a60026040516111bf9493929190611a4d565b60405180910390a45050505050505050505050505050565b60006111e161173d565b848460006111f0826028611ba3565b90506201cccc81111561122257604051634634691b60e01b8152600481018290526201cccc6024820152604401610467565b811580159061125a5750600160fe1b80848460008161124357611243611b64565b9050013560f81c60f81b166001600160f81b031916145b1561127857604051631f97007f60e01b815260040160405180910390fd5b602182108015906112a657508282600081811061129757611297611b64565b90910135600160ff1b16151590505b156112fa5760006112bb602160018587611bbb565b6112c491611be5565b60008181526008602052604090205490915060ff166112f85760405162f20c5d60e01b815260048101829052602401610467565b505b60008061130688611602565b915091506000828b8b60405160200161132193929190611c2f565b60408051808303601f1901815291905280516020909101209b919a509098505050505050505050565b60008060008060005486101561137357604051633eb9f37d60e11b815260040160405180910390fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663eca067ad6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113c157600080fd5b505afa1580156113d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f99190611a17565b8611156114195760405163925f8bd360e01b815260040160405180910390fd5b60015460405163422def4160e11b815260048101899052602481018890526001600160a01b039091169063845bde8290604401608060405180830381600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149e9190611c57565b60008a90559296509094509250905084156115cd576040805142602082015233606081901b6001600160601b03191692820192909252605481018990526074810186905248609482015260009060b40160408051808303601f190181529082905260015481516020830120637a88b10760e01b84526001600160a01b0386811660048601526024850191909152919350600092911690637a88b10790604401602060405180830381600087803b15801561155757600080fd5b505af115801561156b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158f9190611a17565b9050807fff64905f73a67fb594e0f940a8075a860db489ad991e032f48c81123eb52d60b836040516115c19190611c8d565b60405180910390a25050505b93509350935093565b60006115e061173d565b6000806115ec85611602565b8151602090920191909120969095509350505050565b606061160c61173d565b60006116166116a9565b9050600081600001518260200151836040015184606001518860405160200161167e95949392919060c095861b6001600160c01b0319908116825294861b8516600882015292851b8416601084015290841b8316601883015290921b16602082015260280190565b604051602081830303815290604052905060288151146116a0576116a0611cc0565b94909350915050565b6116b161173d565b6116b961173d565b6006544211156116dc576006546116d09042611b06565b6001600160401b031681525b6007546116e99042611ba3565b6001600160401b0316602082015260045443111561171d5760045461170e9043611b06565b6001600160401b031660408201525b60055461172a9043611ba3565b6001600160401b03166060820152919050565b60408051608081018252600080825260208201819052918101829052606081019190915290565b60006020828403121561177657600080fd5b5035919050565b6001600160a01b038116811461179257600080fd5b50565b60008082840360a08112156117a957600080fd5b83356117b48161177d565b92506080601f19820112156117c857600080fd5b506020830190509250929050565b60008083601f8401126117e857600080fd5b5081356001600160401b038111156117ff57600080fd5b60208301915083602082850101111561181757600080fd5b9250929050565b60008060008060006080868803121561183657600080fd5b8535945060208601356001600160401b0381111561185357600080fd5b61185f888289016117d6565b90955093505060408601359150606086013561187a8161177d565b809150509295509295909350565b801515811461179257600080fd5b600080604083850312156118a957600080fd5b82356118b48161177d565b915060208301356118c481611888565b809150509250929050565b6000602082840312156118e157600080fd5b81356118ec8161177d565b9392505050565b60006080828403121561190557600080fd5b604051608081018181106001600160401b038211171561193557634e487b7160e01b600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b6000806020838503121561197957600080fd5b82356001600160401b0381111561198f57600080fd5b61199b858286016117d6565b90969095509350505050565b60008060008060008060e087890312156119c057600080fd5b86359550602087013560ff811681146119d857600080fd5b945060808701888111156119eb57600080fd5b60408801945035925060a0870135611a028161177d565b8092505060c087013590509295509295509295565b600060208284031215611a2957600080fd5b5051919050565b600060208284031215611a4257600080fd5b81516118ec8161177d565b600060e0820190508582528460208301526001600160401b038085511660408401528060208601511660608401528060408601511660808401528060608601511660a08401525060038310611ab257634e487b7160e01b600052602160045260246000fd5b8260c083015295945050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611b1857611b18611af0565b500390565b600060208284031215611b2f57600080fd5b81516118ec81611888565b6001600160a01b0392831681529116602082015260400190565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b8c57600080fd5b81356001600160401b03811681146118ec57600080fd5b60008219821115611bb657611bb6611af0565b500190565b60008085851115611bcb57600080fd5b83861115611bd857600080fd5b5050820193919092039150565b80356020831015610e9e57600019602084900360031b1b1692915050565b60005b83811015611c1e578181015183820152602001611c06565b8381111561058f5750506000910152565b60008451611c41818460208901611c03565b8201838582376000930192835250909392505050565b60008060008060808587031215611c6d57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6020815260008251806020840152611cac816040850160208701611c03565b601f01601f19169190910160400192915050565b634e487b7160e01b600052600160045260246000fdfe7394f4a19a13c7b92b5bb71033245305946ef78452f7b4986ac1390b5df4ebd7ea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456ea2646970667358221220199ac260a3f2e5d67162d12e727717763246013da4240b94783f6abd9a40346164736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class SequencerInbox__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "SequencerInbox";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SequencerInbox__factory = SequencerInbox__factory;
SequencerInbox__factory.bytecode = _bytecode;
SequencerInbox__factory.abi = _abi;
