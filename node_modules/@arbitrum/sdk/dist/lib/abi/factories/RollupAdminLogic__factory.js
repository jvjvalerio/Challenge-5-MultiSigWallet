"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RollupAdminLogic__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "sendRoot",
                type: "bytes32",
            },
        ],
        name: "NodeConfirmed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "parentNodeHash",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "nodeHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "executionHash",
                type: "bytes32",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "beforeState",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "afterState",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "numBlocks",
                        type: "uint64",
                    },
                ],
                indexed: false,
                internalType: "struct RollupLib.Assertion",
                name: "assertion",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "afterInboxBatchAcc",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "wasmModuleRoot",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "inboxMaxCount",
                type: "uint256",
            },
        ],
        name: "NodeCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "NodeRejected",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "OwnerFunctionCalled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "challengeIndex",
                type: "uint64",
            },
            {
                indexed: false,
                internalType: "address",
                name: "asserter",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "challenger",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "challengedNode",
                type: "uint64",
            },
        ],
        name: "RollupChallengeStarted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "machineHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
        ],
        name: "RollupInitialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "UpgradedSecondary",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "initialBalance",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "finalBalance",
                type: "uint256",
            },
        ],
        name: "UserStakeUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "initialBalance",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "finalBalance",
                type: "uint256",
            },
        ],
        name: "UserWithdrawableFundsUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "_stakerMap",
        outputs: [
            {
                internalType: "uint256",
                name: "amountStaked",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "index",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "latestStakedNode",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "currentChallenge",
                type: "uint64",
            },
            {
                internalType: "bool",
                name: "isStaked",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "amountStaked",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "chainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "challengeManager",
        outputs: [
            {
                internalType: "contract IChallengeManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "confirmPeriodBlocks",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "currentChallenge",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extraChallengeTimeBlocks",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "firstUnresolvedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "sendRoot",
                type: "bytes32",
            },
        ],
        name: "forceConfirmNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "prevNode",
                type: "uint64",
            },
            {
                internalType: "uint256",
                name: "prevNodeInboxMaxCount",
                type: "uint256",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "beforeState",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "afterState",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "numBlocks",
                        type: "uint64",
                    },
                ],
                internalType: "struct RollupLib.Assertion",
                name: "assertion",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "expectedNodeHash",
                type: "bytes32",
            },
        ],
        name: "forceCreateNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "staker",
                type: "address[]",
            },
        ],
        name: "forceRefundStaker",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "stakerA",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "stakerB",
                type: "address[]",
            },
        ],
        name: "forceResolveChallenge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "getNode",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "stateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "challengeHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "confirmData",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "prevNum",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "deadlineBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "noChildConfirmedBeforeBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "stakerCount",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "childStakerCount",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "firstChildBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "latestChildNumber",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "createdAtBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "nodeHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Node",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "getStaker",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amountStaked",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "index",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "latestStakedNode",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "currentChallenge",
                        type: "uint64",
                    },
                    {
                        internalType: "bool",
                        name: "isStaked",
                        type: "bool",
                    },
                ],
                internalType: "struct IRollupCore.Staker",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "stakerNum",
                type: "uint64",
            },
        ],
        name: "getStakerAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "inbox",
        outputs: [
            {
                internalType: "contract IInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "confirmPeriodBlocks",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "extraChallengeTimeBlocks",
                        type: "uint64",
                    },
                    {
                        internalType: "address",
                        name: "stakeToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "baseStake",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "wasmModuleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "owner",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "loserStakeEscrow",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "chainId",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "delayBlocks",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "futureBlocks",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "delaySeconds",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "futureSeconds",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct ISequencerInbox.MaxTimeVariation",
                        name: "sequencerInboxMaxTimeVariation",
                        type: "tuple",
                    },
                ],
                internalType: "struct Config",
                name: "config",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "contract IBridge",
                        name: "bridge",
                        type: "address",
                    },
                    {
                        internalType: "contract ISequencerInbox",
                        name: "sequencerInbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IInbox",
                        name: "inbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IOutbox",
                        name: "outbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IRollupEventInbox",
                        name: "rollupEventInbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IChallengeManager",
                        name: "challengeManager",
                        type: "address",
                    },
                    {
                        internalType: "contract IRollupAdmin",
                        name: "rollupAdminLogic",
                        type: "address",
                    },
                    {
                        internalType: "contract IRollupUser",
                        name: "rollupUserLogic",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "validatorUtils",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "validatorWalletCreator",
                        type: "address",
                    },
                ],
                internalType: "struct ContractDependencies",
                name: "connectedContracts",
                type: "tuple",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isStaked",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isStakedOnLatestConfirmed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "isValidator",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isZombie",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastStakeBlock",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestConfirmed",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestNodeCreated",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "latestStakedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "loserStakeEscrow",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minimumAssertionPeriod",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "nodeHasStaker",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "outbox",
        outputs: [
            {
                internalType: "contract IOutbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_outbox",
                type: "address",
            },
        ],
        name: "removeOldOutbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "resume",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupDeploymentBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupEventInbox",
        outputs: [
            {
                internalType: "contract IRollupEventInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerInbox",
        outputs: [
            {
                internalType: "contract ISequencerInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "newBaseStake",
                type: "uint256",
            },
        ],
        name: "setBaseStake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "newConfirmPeriod",
                type: "uint64",
            },
        ],
        name: "setConfirmPeriodBlocks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_inbox",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_enabled",
                type: "bool",
            },
        ],
        name: "setDelayedInbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "newExtraTimeBlocks",
                type: "uint64",
            },
        ],
        name: "setExtraChallengeTimeBlocks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newLoserStakerEscrow",
                type: "address",
            },
        ],
        name: "setLoserStakeEscrow",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "newPeriod",
                type: "uint256",
            },
        ],
        name: "setMinimumAssertionPeriod",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IOutbox",
                name: "_outbox",
                type: "address",
            },
        ],
        name: "setOutbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sequencerInbox",
                type: "address",
            },
        ],
        name: "setSequencerInbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newStakeToken",
                type: "address",
            },
        ],
        name: "setStakeToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_validator",
                type: "address[]",
            },
            {
                internalType: "bool[]",
                name: "_val",
                type: "bool[]",
            },
        ],
        name: "setValidator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "newWasmModuleRoot",
                type: "bytes32",
            },
        ],
        name: "setWasmModuleRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stakeToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stakerCount",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalWithdrawableFunds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "beacon",
                type: "address",
            },
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeBeacon",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeSecondaryTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeSecondaryToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorUtils",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorWalletCreator",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "wasmModuleRoot",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "withdrawableFunds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "zombieNum",
                type: "uint256",
            },
        ],
        name: "zombieAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "zombieCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "zombieNum",
                type: "uint256",
            },
        ],
        name: "zombieLatestStakedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a06040523060805234801561001457600080fd5b5060805161503d61007660003960008181610f9c01528181610fdc015281816110ce0152818161110e015281816112b1015281816112f1015281816113e3015281816118bb015281816118fb01528181611a760152611ab6015261503d6000f3fe6080604052600436106103595760003560e01c80638456cb59116101bd578063ce11e6ab116100f8578063ee35f3271161009b578063ee35f32714610c33578063ef40a67014610c53578063f065de3f14610c89578063f33e1fac14610ca9578063f38c937914610cc9578063facd743b14610ce9578063fb0e722b14610d19578063fc8ffa0314610d39578063ff204f3b14610d5957600080fd5b8063ce11e6ab14610ac4578063ce66d05c14610ae4578063d01e660214610b04578063d735e21d14610b24578063dcd030aa14610b49578063dff6978714610b69578063e78cea9214610b7e578063e8bd492214610b9e57600080fd5b80639846129a116101605780639846129a146108ec5780639a8a0592146108ff578063a23c44b114610915578063a3ffb77214610a24578063aa38a6e714610a44578063aa65af4814610a64578063ad1fec8b14610a84578063bc45e0ae14610aa457600080fd5b80638456cb59146107ef578063848bf918146108045780638640ce5f1461082457806389384960146108495780638ee1a1261461086957806391c657e81461087f57806392c8134c1461089f578063948d6588146108cc57600080fd5b80634f1ef2861161029857806363721d6b1161023b57806363721d6b146106cb57806365f7f80d146106e057806369fd251c146106fe5780636ddd37441461074757806371ef232c1461076757806376e7e23b1461077d578063771b2f97146107935780637ba9534a146107ba5780637c75c298146107cf57600080fd5b80634f1ef286146105bc5780634f61f850146105cf57806351ed6a30146105ef57806352d1902d1461060f578063567ca41b146106245780635c975abb146106445780636136fe2e146106685780636177fd181461068857600080fd5b80632e7acfa6116103005780632e7acfa61461046f5780632f30cabd146104a75780632f7968e8146104dd5780633659cfe6146104fd5780633e96576e1461051d57806345e38b6414610566578063470dce4e1461057c57806347fb24c51461059c57600080fd5b8063014cc92c1461035e578063023a96fe146103945780630397d458146103b4578063046f7da2146103d657806306ae5851146103eb5780630d40a0fd1461040b57806313af40351461042b5780631b1689e91461044b575b600080fd5b34801561036a57600080fd5b50606f5461037e906001600160a01b031681565b60405161038b919061440e565b60405180910390f35b3480156103a057600080fd5b50606e5461037e906001600160a01b031681565b3480156103c057600080fd5b506103d46103cf366004614437565b610d79565b005b3480156103e257600080fd5b506103d4610f4b565b3480156103f757600080fd5b506103d4610406366004614454565b610f6f565b34801561041757600080fd5b506103d4610426366004614437565b610f91565b34801561043757600080fd5b506103d4610446366004614437565b611051565b34801561045757600080fd5b50610461607d5481565b60405190815260200161038b565b34801561047b57600080fd5b5060655461048f906001600160401b031681565b6040516001600160401b03909116815260200161038b565b3480156104b357600080fd5b506104616104c2366004614437565b6001600160a01b03166000908152607b602052604090205490565b3480156104e957600080fd5b506103d46104f8366004614489565b611077565b34801561050957600080fd5b506103d4610518366004614437565b6110c3565b34801561052957600080fd5b5061048f610538366004614437565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b34801561057257600080fd5b5061046160735481565b34801561058857600080fd5b506103d46105973660046144bc565b611180565b3480156105a857600080fd5b506103d46105b736600461451c565b611224565b6103d46105ca3660046145c3565b6112a6565b3480156105db57600080fd5b506103d46105ea366004614437565b611357565b3480156105fb57600080fd5b5060725461037e906001600160a01b031681565b34801561061b57600080fd5b506104616113d6565b34801561063057600080fd5b506103d461063f366004614437565b611484565b34801561065057600080fd5b5060335460ff165b604051901515815260200161038b565b34801561067457600080fd5b506103d461068336600461466a565b611551565b34801561069457600080fd5b506106586106a3366004614437565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b3480156106d757600080fd5b50607a54610461565b3480156106ec57600080fd5b506075546001600160401b031661048f565b34801561070a57600080fd5b5061048f610719366004614437565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b34801561075357600080fd5b5061037e61076236600461466a565b611593565b34801561077357600080fd5b50610461607c5481565b34801561078957600080fd5b5061046160675481565b34801561079f57600080fd5b5060655461048f90600160401b90046001600160401b031681565b3480156107c657600080fd5b5061048f6115cc565b3480156107db57600080fd5b506103d46107ea3660046146d0565b6115e2565b3480156107fb57600080fd5b506103d46116a1565b34801561081057600080fd5b506103d461081f366004614711565b6116c5565b34801561083057600080fd5b50607554600160c01b90046001600160401b031661048f565b34801561085557600080fd5b506103d4610864366004614454565b611741565b34801561087557600080fd5b5061046160685481565b34801561088b57600080fd5b5061065861089a366004614437565b611763565b3480156108ab57600080fd5b506108bf6108ba36600461466a565b6117c7565b60405161038b919061473f565b3480156108d857600080fd5b506103d46108e7366004614454565b61188e565b6103d46108fa3660046145c3565b6118b0565b34801561090b57600080fd5b5061046160665481565b34801561092157600080fd5b506109cf610930366004614437565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b60405161038b9190600060a0820190508251825260208301516001600160401b038082166020850152806040860151166040850152806060860151166060850152505060808301511515608083015292915050565b348015610a3057600080fd5b506103d4610a3f36600461483b565b61195d565b348015610a5057600080fd5b50606d5461037e906001600160a01b031681565b348015610a7057600080fd5b50610658610a7f3660046148a6565b611a34565b348015610a9057600080fd5b506103d4610a9f3660046148c2565b611a6b565b348015610ab057600080fd5b5060705461037e906001600160a01b031681565b348015610ad057600080fd5b50606b5461037e906001600160a01b031681565b348015610af057600080fd5b506103d4610aff36600461466a565b612259565b348015610b1057600080fd5b5061037e610b1f366004614454565b612292565b348015610b3057600080fd5b50607554600160401b90046001600160401b031661048f565b348015610b5557600080fd5b50610658610b64366004614437565b6122a7565b348015610b7557600080fd5b5060785461048f565b348015610b8a57600080fd5b50606a5461037e906001600160a01b031681565b348015610baa57600080fd5b50610bfb610bb9366004614437565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a00161038b565b348015610c3f57600080fd5b50606c5461037e906001600160a01b031681565b348015610c5f57600080fd5b50610461610c6e366004614437565b6001600160a01b031660009081526079602052604090205490565b348015610c9557600080fd5b5060715461037e906001600160a01b031681565b348015610cb557600080fd5b5061048f610cc4366004614454565b6122ea565b348015610cd557600080fd5b506103d4610ce436600461483b565b612321565b348015610cf557600080fd5b50610658610d04366004614437565b60746020526000908152604090205460ff1681565b348015610d2557600080fd5b5060695461037e906001600160a01b031681565b348015610d4557600080fd5b506103d4610d54366004614437565b612514565b348015610d6557600080fd5b506103d4610d74366004614437565b6125a6565b60335460ff16610da45760405162461bcd60e51b8152600401610d9b9061490a565b60405180910390fd5b6000806001600160a01b0316826001600160a01b0316141590506000306001600160a01b031663cd205fda6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df957600080fd5b505afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190614938565b905081151581151514610e7e5760405162461bcd60e51b81526020600482015260156024820152741393d7d554d15497d313d1d250d7d4d5541413d495605a1b6044820152606401610d9b565b6078546001600160401b031615610ecb5760405162461bcd60e51b81526020600482015260116024820152704e4f5f4143544956455f5354414b45525360781b6044820152606401610d9b565b607c5415610f115760405162461bcd60e51b81526020600482015260136024820152724e4f5f50454e44494e475f574954484452415760681b6044820152606401610d9b565b607280546001600160a01b0319166001600160a01b038516179055604051600d90600080516020614fc183398151915290600090a2505050565b610f5361263e565b604051600490600080516020614fc183398151915290600090a2565b6067819055604051600c90600080516020614fc183398151915290600090a250565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610fda5760405162461bcd60e51b8152600401610d9b90614955565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661100c6126a4565b6001600160a01b0316146110325760405162461bcd60e51b8152600401610d9b906149a1565b6040805160008082526020820190925261104e918391906126c5565b50565b61105a81612819565b604051600790600080516020614fc183398151915290600090a250565b60335460ff166110995760405162461bcd60e51b8152600401610d9b9061490a565b6110a483838361286d565b604051601890600080516020614fc183398151915290600090a2505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561110c5760405162461bcd60e51b8152600401610d9b90614955565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661113e6126a4565b6001600160a01b0316146111645760405162461bcd60e51b8152600401610d9b906149a1565b6040805160008082526020820190925261104e918391906129c7565b60335460ff166111a25760405162461bcd60e51b8152600401610d9b9061490a565b6075546001600160401b038581169116146111f75760405162461bcd60e51b815260206004820152601560248201527413d3931657d310551154d517d0d3d3919254935151605a1b6044820152606401610d9b565b61120382858584612aff565b50604051601790600080516020614fc183398151915290600090a250505050565b606a546040516347fb24c560e01b81526001600160a01b03909116906347fb24c59061125690859085906004016149ed565b600060405180830381600087803b15801561127057600080fd5b505af1158015611284573d6000803e3d6000fd5b505060405160029250600080516020614fc18339815191529150600090a25050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156112ef5760405162461bcd60e51b8152600401610d9b90614955565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113216126a4565b6001600160a01b0316146113475760405162461bcd60e51b8152600401610d9b906149a1565b611353828260016129c7565b5050565b606a546040516304f61f8560e41b81526001600160a01b0390911690634f61f8509061138790849060040161440e565b600060405180830381600087803b1580156113a157600080fd5b505af11580156113b5573d6000803e3d6000fd5b5050604051601b9250600080516020614fc18339815191529150600090a250565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114715760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610d9b565b50600080516020614fa183398151915290565b606b546001600160a01b03828116911614156114cf5760405162461bcd60e51b815260206004820152600a602482015269086aaa4be9eaaa8849eb60b31b6044820152606401610d9b565b606a546040516319dc7ae560e31b81526001600160a01b039091169063cee3d728906115029084906000906004016149ed565b600060405180830381600087803b15801561151c57600080fd5b505af1158015611530573d6000803e3d6000fd5b505060405160019250600080516020614fc18339815191529150600090a250565b6065805467ffffffffffffffff60401b1916600160401b6001600160401b03841602179055604051600a90600080516020614fc183398151915290600090a250565b60006078826001600160401b0316815481106115b1576115b1614a08565b6000918252602090912001546001600160a01b031692915050565b607554600160801b90046001600160401b031690565b60335460ff166116045760405162461bcd60e51b8152600401610d9b9061490a565b60005b818110156116825761164083838381811061162457611624614a08565b90506020020160208101906116399190614437565b600061310d565b5061167083838381811061165657611656614a08565b905060200201602081019061166b9190614437565b6131d2565b8061167a81614a34565b915050611607565b50604051601690600080516020614fc183398151915290600090a25050565b6116a9613278565b604051600390600080516020614fc183398151915290600090a2565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe6906116f190849060040161440e565b600060405180830381600087803b15801561170b57600080fd5b505af115801561171f573d6000803e3d6000fd5b505060405160149250600080516020614fc18339815191529150600090a25050565b6068819055604051601a90600080516020614fc183398151915290600090a250565b6000805b607a548110156117be57607a818154811061178457611784614a08565b6000918252602090912001546001600160a01b03848116911614156117ac5750600192915050565b806117b681614a34565b915050611767565b50600092915050565b6117cf6142e9565b6001600160401b03821660009081526076602052604090206040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b6073819055604051600890600080516020614fc183398151915290600090a250565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156118f95760405162461bcd60e51b8152600401610d9b90614955565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661192b6126a4565b6001600160a01b0316146119515760405162461bcd60e51b8152600401610d9b906149a1565b611353828260016126c5565b82811461197c5760405162461bcd60e51b8152600401610d9b90614a4f565b60005b83811015611a135782828281811061199957611999614a08565b90506020020160208101906119ae9190614a75565b607460008787858181106119c4576119c4614a08565b90506020020160208101906119d99190614437565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580611a0b81614a34565b91505061197f565b50604051600690600080516020614fc183398151915290600090a250505050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415611ab45760405162461bcd60e51b8152600401610d9b90614955565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ae66126a4565b6001600160a01b031614611b0c5760405162461bcd60e51b8152600401610d9b906149a1565b600054610100900460ff16611b275760005460ff1615611b2b565b303b155b611b8e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d9b565b600054610100900460ff16158015611bb0576000805461ffff19166101011790555b43607d55611bc16020830183614437565b606a80546001600160a01b0319166001600160a01b0392909216919091179055611bf16040830160208401614437565b606c80546001600160a01b0319166001600160a01b0392909216919091179055611c1e6020830183614437565b6001600160a01b03166347fb24c5611c3c6060850160408601614437565b60016040518363ffffffff1660e01b8152600401611c5b9291906149ed565b600060405180830381600087803b158015611c7557600080fd5b505af1158015611c89573d6000803e3d6000fd5b50611c9b925050506020830183614437565b6001600160a01b0316634f61f850611cb96040850160208601614437565b6040518263ffffffff1660e01b8152600401611cd5919061440e565b600060405180830381600087803b158015611cef57600080fd5b505af1158015611d03573d6000803e3d6000fd5b50611d18925050506060830160408401614437565b606980546001600160a01b0319166001600160a01b0392909216919091179055611d486080830160608401614437565b606b80546001600160a01b0319166001600160a01b0392909216919091179055611d756020830183614437565b6001600160a01b031663cee3d728611d936080850160608601614437565b60016040518363ffffffff1660e01b8152600401611db29291906149ed565b600060405180830381600087803b158015611dcc57600080fd5b505af1158015611de0573d6000803e3d6000fd5b50611df59250505060a0830160808401614437565b606d80546001600160a01b0319166001600160a01b0392909216919091179055611e226020830183614437565b6001600160a01b03166347fb24c5611e4060a0850160808601614437565b60016040518363ffffffff1660e01b8152600401611e5f9291906149ed565b600060405180830381600087803b158015611e7957600080fd5b505af1158015611e8d573d6000803e3d6000fd5b50611ea29250505060a0830160808401614437565b60405163e199be3560e01b815260e085013560048201526001600160a01b03919091169063e199be3590602401600060405180830381600087803b158015611ee957600080fd5b505af1158015611efd573d6000803e3d6000fd5b50611f12925050506040830160208401614437565b6040516361a93f8f60e01b815260006004820181905260806024830152608482018190526001604483015260648201526001600160a01b0391909116906361a93f8f9060a401600060405180830381600087803b158015611f7257600080fd5b505af1158015611f86573d6000803e3d6000fd5b50611f9d9250505061012083016101008401614437565b606f80546001600160a01b0319166001600160a01b0392909216919091179055611fcf61014083016101208401614437565b607080546001600160a01b0319166001600160a01b0392909216919091179055611fff60c0830160a08401614437565b606e80546001600160a01b0319166001600160a01b039290921691909117905560006120296132f3565b90506120348161334d565b612041602085018561466a565b6065805467ffffffffffffffff19166001600160401b0392909216919091179055612072604085016020860161466a565b606580546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905560e084013560665560608401356067556080840135606855604b6073556120c3613522565b6001600160a01b03166120dc60e0860160c08701614437565b6001600160a01b0316141561212a5760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa0a226a4a760611b6044820152606401610d9b565b61213a60c0850160a08601614437565b6001600160a01b031661215360e0860160c08701614437565b6001600160a01b031614156121a15760405162461bcd60e51b815260206004820152601460248201527324a72b20a624a22fa2a9a1a927abafa7aba722a960611b6044820152606401610d9b565b6121b160e0850160c08601614437565b607180546001600160a01b0319166001600160a01b03929092169190911790556121e16060850160408601614437565b607280546001600160a01b0319166001600160a01b0392909216919091179055604080516080860135815260e086013560208201527ffc1b83c11d99d08a938e0b82a0bd45f822f71ff5abf23f999c93c4533d752464910160405180910390a1508015612254576000805461ff00191690555b505050565b6065805467ffffffffffffffff19166001600160401b038316179055604051600990600080516020614fc183398151915290600090a250565b6000607a82815481106115b1576115b1614a08565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff168015611a655750607554611a65906001600160401b031683611a34565b6000607a82815481106122ff576122ff614a08565b600091825260209091200154600160a01b90046001600160401b031692915050565b60335460ff166123435760405162461bcd60e51b8152600401610d9b9061490a565b8281146123625760405162461bcd60e51b8152600401610d9b90614a4f565b60005b838110156124f35760006123c586868481811061238457612384614a08565b90506020020160208101906123999190614437565b8585858181106123ab576123ab614a08565b90506020020160208101906123c09190614437565b61354a565b90506001600160401b03811661240c5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d25397d0d210531360a21b6044820152606401610d9b565b61246486868481811061242157612421614a08565b90506020020160208101906124369190614437565b6001600160a01b03166000908152607960205260409020600101805467ffffffffffffffff60801b19169055565b61247984848481811061242157612421614a08565b606e546040516356e9df9760e01b81526001600160401b03831660048201526001600160a01b03909116906356e9df9790602401600060405180830381600087803b1580156124c757600080fd5b505af11580156124db573d6000803e3d6000fd5b505050505080806124eb90614a34565b915050612365565b50604051601590600080516020614fc183398151915290600090a250505050565b61251c613522565b6001600160a01b0316816001600160a01b0316141561256e5760405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f455343524f5760901b6044820152606401610d9b565b607180546001600160a01b0319166001600160a01b038316179055604051601990600080516020614fc183398151915290600090a250565b606b80546001600160a01b0319166001600160a01b0383811691909117909155606a546040516319dc7ae560e31b815291169063cee3d728906125f09084906001906004016149ed565b600060405180830381600087803b15801561260a57600080fd5b505af115801561261e573d6000803e3d6000fd5b505060405160009250600080516020614fc183398151915291508290a250565b60335460ff166126605760405162461bcd60e51b8152600401610d9b9061490a565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161269a919061440e565b60405180910390a1565b6000600080516020614fa18339815191525b546001600160a01b0316919050565b7f49bd798cd84788856140a4cd5030756b4d08a9e4d55db725ec195f232d262a895460ff16156126f85761225483613618565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561273157600080fd5b505afa925050508015612761575060408051601f3d908101601f1916820190925261275e91810190614a92565b60015b6127ce5760405162461bcd60e51b815260206004820152603860248201527f45524331393637557067726164653a206e6577207365636f6e6461727920696d604482015277706c656d656e746174696f6e206973206e6f74205555505360401b6064820152608401610d9b565b7f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d811461280d5760405162461bcd60e51b8152600401610d9b90614aab565b506122548383836136d3565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f612842613522565b604080516001600160a01b03928316815291841660208301520160405180910390a161104e816136fe565b6001600160401b038316600090815260766020526040902061288f838361378a565b8160020154146128d05760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606401610d9b565b606b54604051630502677360e51b815260048101849052602481018590526001600160a01b039091169063a04cee6090604401600060405180830381600087803b15801561291d57600080fd5b505af1158015612931573d6000803e3d6000fd5b50506075805467ffffffffffffffff19166001600160401b0388161790555061295d9050846001614af4565b6075805467ffffffffffffffff60401b1916600160401b6001600160401b03938416021790556040805185815260208101859052918616917f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c91015b60405180910390a250505050565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156129fa57612254836137c0565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a3357600080fd5b505afa925050508015612a63575060408051601f3d908101601f19168201909252612a6091810190614a92565b60015b612ac65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610d9b565b600080516020614fa18339815191528114612af35760405162461bcd60e51b8152600401610d9b90614aab565b50612254838383613842565b60006001612b1561014087016101208801614b44565b6003811115612b2657612b26614b1f565b1480612b5457506002612b4161014087016101208801614b44565b6003811115612b5257612b52614b1f565b145b612b935760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606401610d9b565b612b9b61434d565b612ba4856117c7565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b158015612bec57600080fd5b505afa158015612c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c249190614a92565b8152606081015151612c36878661384b565b14612c755760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606401610d9b565b6000612c91612c8c36899003890160a08a01614c21565b613887565b90506000612ca7612c8c368a90038a018a614c21565b9050806001600160401b0316826001600160401b03161015612cfd5760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606401610d9b565b806001600160401b0316826001600160401b03161415612da657612d31612d2c368a90038a0160a08b01614c21565b61389c565b6001600160401b0316612d4f612d2c368b90038b0160a08c01614c21565b6001600160401b03161015612da65760405162461bcd60e51b815260206004820152601a60248201527f494e424f585f504f535f494e5f4d53475f4241434b57415244530000000000006044820152606401610d9b565b6002612dba6101408a016101208b01614b44565b6003811115612dcb57612dcb614b1f565b1480612df457506000612de9612d2c368b90038b0160a08c01614c21565b6001600160401b0316115b15612e075781612e0381614c3d565b9250505b82516001600160401b0383161115612e525760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606401610d9b565b6001600160401b03821615612efa57606a546001600160a01b03166316bf5579612e7d600185614c64565b6040516001600160e01b031960e084901b1681526001600160401b03909116600482015260240160206040518083038186803b158015612ebc57600080fd5b505afa158015612ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef49190614a92565b60e08401525b50612f149050612f0f36889003880188614ccb565b6138ab565b6040820152606554612f2f906001600160401b031643614af4565b6001600160401b0390811660c0830152606082015161012001511615801560a0830152612f8557606081015161012001516001600160401b03166000908152607660205260409020600501546080820152612f95565b6060810151610160015160808201525b612fb48160a00151826080015183604001518460e0015160685461394a565b9150828214612ffc5760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606401610d9b565b6130446130108760a001836000015161384b565b6130218360400151436068546139b7565b613038613033368b90038b018b614ccb565b6139f6565b888560c0015187613a20565b602082015260006130536115cc565b61305e906001614af4565b90506000613080876001600160401b0316600090815260766020526040902090565b905061308c8183613a74565b6130998360200151613ae5565b505081816060015161016001516130ae6115cc565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e0015160685488600001516040516130fc959493929190614db5565b60405180910390a450949350505050565b6001600160a01b038216600090815260796020526040812080548084111561316a5760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b6044820152606401610d9b565b60006131768583614e15565b85845590506131858682613c1c565b60408051838152602081018790526001600160a01b038816917febd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6910160405180910390a295945050505050565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b03199092169416939093179290921790915561135382613cb8565b60335460ff16156132be5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610d9b565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861268d3390565b6132fb6142e9565b61330361439e565b600061333560405180604001604052808481526020016001600381111561332c5761332c614b1f565b90526001613e33565b905061334681600080804381613a20565b9250505090565b613355613e5a565b60008080526076602090815282517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a181958558201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a1819595560408201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195a5560608201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195b8054608085015160a086015160c08701516001600160401b039586166001600160801b031994851617600160401b9387168402176001600160801b03908116600160801b93881684026001600160c01b0390811691909117600160c01b93891684021790965560e08901517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195c80546101008c01516101208d01516101408e0151948c169290991691909117908a169096029590951790911694871690920290941692909217919093169091021790556101608201517fafbc767fed27552cbeceb3d11150dacedabc53b0cc52ac5aa6285a747a18195d556134f9906001614af4565b607560086101000a8154816001600160401b0302191690836001600160401b0316021790555050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036126b6565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b0316806135ba5760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606401610d9b565b60018201546001600160401b03828116600160801b909204161461360f5760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606401610d9b565b95945050505050565b6001600160a01b0381163b61368f5760405162461bcd60e51b815260206004820152603760248201527f455243313936373a206e6577207365636f6e6461727920696d706c656d656e74604482015276185d1a5bdb881a5cc81b9bdd08184818dbdb9d1c9858dd604a1b6064820152608401610d9b565b807f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6136dc83613e8b565b6000825111806136e95750805b15612254576136f88383613ecb565b50505050565b6001600160a01b0381166137635760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d9b565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036136b2565b60408051602081018490529081018290526000906060015b60405160208183030381529060405280519060200120905092915050565b6001600160a01b0381163b61382d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610d9b565b80600080516020614fa18339815191526136b2565b6136dc83613ef0565b600061386461385f36859003850185614c21565b613f30565b8261387560a0860160808701614b44565b6040516020016137a293929190614e2c565b6020810151600090815b602002015192915050565b60208101516000906001613891565b60006138b56143c3565b825160200151819060038111156138ce576138ce614b1f565b908160038111156138e1576138e1614b1f565b90525060208381015181015190820190600381111561390257613902614b1f565b9081600381111561391557613915614b1f565b9052506139206143e1565b8351518152602080850151519082015260408401516139429083908390613fa4565b949350505050565b6000808661395957600061395c565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090505b9392505050565b6000611a65613a0c83602001516000015161404e565b602084015151613a1b90614059565b61378a565b613a286142e9565b613a306142e9565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b6004820154600160401b90046001600160401b0316613ab55760048201805467ffffffffffffffff60401b1916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b60758054600160801b90046001600160401b0316906010613b0583614c3d565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b169093029890981790931691881690950290911617939094169093029190911790556101609092015160059092019190915550565b6001600160a01b0382166000908152607b602052604081205490613c408383614e6a565b6001600160a01b0385166000908152607b60205260408120829055607c80549293508592909190613c72908490614e6a565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae291016129b9565b6001600160a01b0381166000908152607960205260409020600180820154607880546001600160401b03909216929091613cf29190614e15565b81548110613d0257613d02614a08565b600091825260209091200154607880546001600160a01b03909216916001600160401b038416908110613d3757613d37614a08565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b031681548110613d8657613d86614a08565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600101805467ffffffffffffffff19166001600160401b03929092169190911790556078805480613dde57613dde614e82565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b6000613e428360000151613f30565b8284602001516040516020016137a293929190614e2c565b600054610100900460ff16613e815760405162461bcd60e51b8152600401610d9b90614e98565b613e89614065565b565b613e9481613618565b6040516001600160a01b038216907ff7eed2a7fabbf1bec8d55ed5e785cc76622376dde5df4ff15470551e030b813490600090a250565b60606139ef8383604051806060016040528060278152602001614fe160279139614098565b613ef9816137c0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b60408051600280825260608201835260009283929190602083019080368337019050508551909150613fe690613fe18660005b6020020151613f30565b614175565b81600081518110613ff957613ff9614a08565b602090810291909101015261401a8560016020020151613fe1866001613fd7565b8160018151811061402d5761402d614a08565b60200260200101818152505061360f6000846001600160401b031683614299565b805160009081613891565b80516000906001613891565b600054610100900460ff1661408c5760405162461bcd60e51b8152600401610d9b90614e98565b6033805460ff19169055565b60606001600160a01b0384163b6141005760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610d9b565b600080856001600160a01b03168560405161411b9190614f0f565b600060405180830381855af49150503d8060008114614156576040519150601f19603f3d011682016040523d82523d6000602084013e61415b565b606091505b509150915061416b8282866142b0565b9695505050505050565b6000600183600381111561418b5761418b614b1f565b14156141d1576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b604051602081830303815290604052805190602001209050611a65565b60028360038111156141e5576141e5614b1f565b141561421b5760405174213637b1b59039ba30ba32961032b93937b932b21d60591b6020820152603581018390526055016141b4565b600383600381111561422f5761422f614b1f565b141561425e5760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b60208201526035016141b4565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610d9b565b60008383836040516020016139d693929190614f2b565b606083156142bf5750816139ef565b8251156142cf5782518084602001fd5b8160405162461bcd60e51b8152600401610d9b9190614f6d565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b604051806101000160405280600081526020016143686142e9565b81526000602082015260400161437c6142e9565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806143b16143c3565b81526020016143be6143c3565b905290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6143f861439e565b8152602001906001900390816143f05790505090565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461104e57600080fd5b60006020828403121561444957600080fd5b81356139ef81614422565b60006020828403121561446657600080fd5b5035919050565b80356001600160401b038116811461448457600080fd5b919050565b60008060006060848603121561449e57600080fd5b6144a78461446d565b95602085013595506040909401359392505050565b6000806000808486036101c08112156144d457600080fd5b6144dd8661446d565b945060208601359350610160603f19820112156144f957600080fd5b5092959194505060408301926101a001359150565b801515811461104e57600080fd5b6000806040838503121561452f57600080fd5b823561453a81614422565b9150602083013561454a8161450e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561458d5761458d614555565b60405290565b604051601f8201601f191681016001600160401b03811182821017156145bb576145bb614555565b604052919050565b600080604083850312156145d657600080fd5b82356145e181614422565b91506020838101356001600160401b03808211156145fe57600080fd5b818601915086601f83011261461257600080fd5b81358181111561462457614624614555565b614636601f8201601f19168501614593565b9150808252878482850101111561464c57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020828403121561467c57600080fd5b6139ef8261446d565b60008083601f84011261469757600080fd5b5081356001600160401b038111156146ae57600080fd5b6020830191508360208260051b85010111156146c957600080fd5b9250929050565b600080602083850312156146e357600080fd5b82356001600160401b038111156146f957600080fd5b61470585828601614685565b90969095509350505050565b6000806040838503121561472457600080fd5b823561472f81614422565b9150602083013561454a81614422565b600061018082019050825182526020830151602083015260408301516040830152606083015161477a60608401826001600160401b03169052565b50608083015161479560808401826001600160401b03169052565b5060a08301516147b060a08401826001600160401b03169052565b5060c08301516147cb60c08401826001600160401b03169052565b5060e08301516147e660e08401826001600160401b03169052565b50610100838101516001600160401b038116848301525050610120838101516001600160401b038116848301525050610140838101516001600160401b03811684830152505061016092830151919092015290565b6000806000806040858703121561485157600080fd5b84356001600160401b038082111561486857600080fd5b61487488838901614685565b9096509450602087013591508082111561488d57600080fd5b5061489a87828801614685565b95989497509550505050565b600080604083850312156148b957600080fd5b61472f8361446d565b6000808284036102c08112156148d757600080fd5b610180808212156148e757600080fd5b84935061014061017f19830112156148fe57600080fd5b92959390920193505050565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60006020828403121561494a57600080fd5b81516139ef8161450e565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b039290921682521515602082015260400190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614a4857614a48614a1e565b5060010190565b6020808252600c908201526b0aea49e9c8ebe988a9c8ea8960a31b604082015260600190565b600060208284031215614a8757600080fd5b81356139ef8161450e565b600060208284031215614aa457600080fd5b5051919050565b60208082526029908201527f45524331393637557067726164653a20756e737570706f727465642070726f786040820152681a58589b195555525160ba1b606082015260800190565b60006001600160401b03808316818516808303821115614b1657614b16614a1e565b01949350505050565b634e487b7160e01b600052602160045260246000fd5b80356004811061448457600080fd5b600060208284031215614b5657600080fd5b6139ef82614b35565b600060808284031215614b7157600080fd5b614b7961456b565b905082601f830112614b8a57600080fd5b614b9261456b565b806040840185811115614ba457600080fd5b845b81811015614bbe578035845260209384019301614ba6565b5081845285605f860112614bd157600080fd5b614bd961456b565b92508291506080850186811115614bef57600080fd5b80821015614c1357614c008261446d565b8452602084019350602082019150614bef565b505060208301525092915050565b600060808284031215614c3357600080fd5b6139ef8383614b5f565b60006001600160401b0380831681811415614c5a57614c5a614a1e565b6001019392505050565b60006001600160401b0383811690831681811015614c8457614c84614a1e565b039392505050565b600060a08284031215614c9e57600080fd5b614ca661456b565b9050614cb28383614b5f565b8152614cc060808301614b35565b602082015292915050565b60006101608284031215614cde57600080fd5b604051606081018181106001600160401b0382111715614d0057614d00614555565b604052614d0d8484614c8c565b8152614d1c8460a08501614c8c565b6020820152614d2e610140840161446d565b60408201529392505050565b604081833760006040838101828152908301915b6002811015614d7d576001600160401b03614d688461446d565b16825260209283019290910190600101614d4e565b505050614d8c60808201614b35565b60048110614daa57634e487b7160e01b600052602160045260246000fd5b806080840152505050565b8581526101e08101614dca6020830187614d3a565b614dda60c0830160a08801614d3a565b6001600160401b03614def610140880161446d565b1661016083015284610180830152836101a0830152826101c08301529695505050505050565b600082821015614e2757614e27614a1e565b500390565b838152826020820152600060048310614e5557634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b60008219821115614e7d57614e7d614a1e565b500190565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015614efe578181015183820152602001614ee6565b838111156136f85750506000910152565b60008251614f21818460208701614ee3565b9190910192915050565b83815260006020848184015260408301845182860160005b82811015614f5f57815184529284019290840190600101614f43565b509198975050505050505050565b6020815260008251806020840152614f8c816040850160208701614ee3565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205b6996cf46bbb58dfe164f0a9b18c4ec3fc3a02a3641d6b0e126755711652e1064736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class RollupAdminLogic__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "RollupAdminLogic";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RollupAdminLogic__factory = RollupAdminLogic__factory;
RollupAdminLogic__factory.bytecode = _bytecode;
RollupAdminLogic__factory.abi = _abi;
