"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Simple__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint64",
                name: "count",
                type: "uint64",
            },
        ],
        name: "CounterEvent",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "NullEvent",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "caller",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "redeemer",
                type: "address",
            },
        ],
        name: "RedeemedEvent",
        type: "event",
    },
    {
        inputs: [],
        name: "checkBlockHashes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "counter",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "emitNullEvent",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "increment",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "incrementEmit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "incrementRedeem",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506103ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e8c389f146100675780635677c11e1461007157806361bc221a1461008c5780639ff5ccac146100b7578063b226a964146100bf578063d09de08a146100c7575b600080fd5b61006f6100cf565b005b6100796101c6565b6040519081526020015b60405180910390f35b60005461009f906001600160401b031681565b6040516001600160401b039091168152602001610083565b61006f610229565b61006f610296565b61006f6102c1565b600080546001600160401b031690806100e783610316565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550507f773c78bf96e65f61c1a2622b47d76e78bfe70dd59cf4f11470c4c121c315941333606e6001600160a01b031663de4ba2b36040518163ffffffff1660e01b815260040160206040518083038186803b15801561016857600080fd5b505afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a0919061033d565b604080516001600160a01b039384168152929091166020830152015b60405180910390a1565b60006101d360024361036d565b406101df60014361036d565b4014156102245760405162461bcd60e51b815260206004820152600f60248201526e0a6829a8abe84989e8696be9082a69608b1b604482015260640160405180910390fd5b504390565b600080546001600160401b0316908061024183610316565b82546101009290920a6001600160401b03818102199093169183160217909155600054604051911681527fa45d7e79cb3c6044f30c8dd891e6571301d6b8b6618df519c987905ec70742e791506020016101bc565b6040517f6f59c82101949290205a9ae9d0c657e6dae1a71c301ae76d385c2792294585fe90600090a1565b600080546001600160401b031690806102d983610316565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b038083168181141561033357610333610300565b6001019392505050565b60006020828403121561034f57600080fd5b81516001600160a01b038116811461036657600080fd5b9392505050565b60008282101561037f5761037f610300565b50039056fea264697066735822122095ac348daa8e52be9b89258fc8325b14deb6fa0943fcf534b54130c7d1286bfb64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class Simple__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "Simple";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Simple__factory = Simple__factory;
Simple__factory.bytecode = _bytecode;
Simple__factory.abi = _abi;
